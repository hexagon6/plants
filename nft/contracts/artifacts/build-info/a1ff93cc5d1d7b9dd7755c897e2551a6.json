{
	"id": "a1ff93cc5d1d7b9dd7755c897e2551a6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"plants/nft/contracts/CosSin.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\n\n\n\ncontract CosSin {\n\n  uint pi = 314159265359;\n\n  function _pow(uint _x, uint _p) internal pure returns (uint _y) {\n    require(_p>=0, \"Choose _p>=0.\");\n    _y = 1;\n    if (_p>0) {\n      for (uint i=1; i<=_p; i++) {\n          _y *= _x;\n        }\n      }\n  }\n\n  function cos(uint _radiant) public  view returns (bool _sign, uint _output) {\n    require( (0<=_radiant && _radiant <= 2*pi) , \"Please choose _radiant between 0 and 2*pi=628318530718. Note: radiant*10^11.\");\n    uint n = _pow(10,11);\n\n    // Note: everything will be taken _radiant = radiant*10^11\n    // 0 <= _radiant <= 2*pi\n    // _sign = false = -1, _sign = true = 1\n    // cos(x) = 1-x^2/2+x^4/24-x^6/720 <=>\n    // n*cos(x) = (720n^6-360n^4(xn)^2+30n^2(xn)^4-(xn)^6)/(720n^5)\n\n    if (_radiant == pi/2 || _radiant == (3*pi)/2 ) {\n      _sign   = true;\n      _output = 0;\n    } else {\n      if ( _radiant < pi/2 ) {\n        _sign = true; // output is positive\n        } else if (_radiant <= pi ){\n          _sign = false;\n          _radiant = pi-_radiant;\n        } else if (_radiant < (3*pi)/2 ){\n          _sign = false;\n          _radiant = _radiant-pi;\n        } else if (_radiant <= 2*pi ){\n          _sign = true;\n          _radiant = 2*pi-_radiant;\n        }\n      _output  = 720*_pow(n,6);\n      _output -= (360*_pow(n,4)*_pow(_radiant,2));\n      _output += (30*_pow(n,2)*_pow(_radiant,4));\n      _output -= _pow(_radiant,6);\n      _output /= (720*_pow(n,5));\n    }\n  }\n\n\n    function sin(uint _radiant) public view returns (bool _sign, uint _output) {\n        require( (0<=_radiant && _radiant <= 2*pi) , \"Please choose _radiant between 0 and 2*pi=628318530718. Note: radiant*10^11.\");\n        // sin(alpha) = cos(pi/2-alpha)\n        uint m = pi/2;\n        if (_radiant>pi/2) {\n          m = pi/2+2*pi;\n        }\n        _radiant = m-_radiant;\n        (_sign , _output) = cos(_radiant);\n    }\n\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"plants/nft/contracts/CosSin.sol": {
				"CosSin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_radiant",
									"type": "uint256"
								}
							],
							"name": "cos",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_sign",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_output",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_radiant",
									"type": "uint256"
								}
							],
							"name": "sin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_sign",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_output",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"plants/nft/contracts/CosSin.sol\":61:1930  contract CosSin {... */\n  mstore(0x40, 0x80)\n    /* \"plants/nft/contracts/CosSin.sol\":92:104  314159265359 */\n  0x492559f64f\n    /* \"plants/nft/contracts/CosSin.sol\":82:104  uint pi = 314159265359 */\n  0x00\n  sstore\n    /* \"plants/nft/contracts/CosSin.sol\":61:1930  contract CosSin {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"plants/nft/contracts/CosSin.sol\":61:1930  contract CosSin {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa58b00ba\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xcb5cc109\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"plants/nft/contracts/CosSin.sol\":320:1502  function cos(uint _radiant) public  view returns (bool _sign, uint _output) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"plants/nft/contracts/CosSin.sol\":1509:1926  function sin(uint _radiant) public view returns (bool _sign, uint _output) {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"plants/nft/contracts/CosSin.sol\":320:1502  function cos(uint _radiant) public  view returns (bool _sign, uint _output) {... */\n    tag_8:\n        /* \"plants/nft/contracts/CosSin.sol\":370:380  bool _sign */\n      0x00\n        /* \"plants/nft/contracts/CosSin.sol\":382:394  uint _output */\n      dup1\n        /* \"plants/nft/contracts/CosSin.sol\":415:423  _radiant */\n      dup3\n        /* \"plants/nft/contracts/CosSin.sol\":412:413  0 */\n      0x00\n        /* \"plants/nft/contracts/CosSin.sol\":412:423  0<=_radiant */\n      gt\n      iszero\n        /* \"plants/nft/contracts/CosSin.sol\":412:443  0<=_radiant && _radiant <= 2*pi */\n      dup1\n      iszero\n      tag_16\n      jumpi\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":441:443  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":439:440  2 */\n      0x02\n        /* \"plants/nft/contracts/CosSin.sol\":439:443  2*pi */\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"plants/nft/contracts/CosSin.sol\":427:435  _radiant */\n      dup4\n        /* \"plants/nft/contracts/CosSin.sol\":427:443  _radiant <= 2*pi */\n      gt\n      iszero\n        /* \"plants/nft/contracts/CosSin.sol\":412:443  0<=_radiant && _radiant <= 2*pi */\n    tag_16:\n        /* \"plants/nft/contracts/CosSin.sol\":402:526  require( (0<=_radiant && _radiant <= 2*pi) , \"Please choose _radiant between 0 and 2*pi=628318530718. Note: radiant*10^11.\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"plants/nft/contracts/CosSin.sol\":532:538  uint n */\n      0x00\n        /* \"plants/nft/contracts/CosSin.sol\":541:552  _pow(10,11) */\n      tag_22\n        /* \"plants/nft/contracts/CosSin.sol\":546:548  10 */\n      0x0a\n        /* \"plants/nft/contracts/CosSin.sol\":549:551  11 */\n      0x0b\n        /* \"plants/nft/contracts/CosSin.sol\":541:545  _pow */\n      tag_23\n        /* \"plants/nft/contracts/CosSin.sol\":541:552  _pow(10,11) */\n      jump\t// in\n    tag_22:\n        /* \"plants/nft/contracts/CosSin.sol\":532:552  uint n = _pow(10,11) */\n      swap1\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":826:827  2 */\n      0x02\n        /* \"plants/nft/contracts/CosSin.sol\":823:825  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":823:827  pi/2 */\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"plants/nft/contracts/CosSin.sol\":811:819  _radiant */\n      dup5\n        /* \"plants/nft/contracts/CosSin.sol\":811:827  _radiant == pi/2 */\n      eq\n        /* \"plants/nft/contracts/CosSin.sol\":811:851  _radiant == pi/2 || _radiant == (3*pi)/2 */\n      dup1\n      tag_26\n      jumpi\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":850:851  2 */\n      0x02\n        /* \"plants/nft/contracts/CosSin.sol\":846:848  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":844:845  3 */\n      0x03\n        /* \"plants/nft/contracts/CosSin.sol\":844:848  3*pi */\n      tag_27\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_27:\n        /* \"plants/nft/contracts/CosSin.sol\":843:851  (3*pi)/2 */\n      tag_28\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_28:\n        /* \"plants/nft/contracts/CosSin.sol\":831:839  _radiant */\n      dup5\n        /* \"plants/nft/contracts/CosSin.sol\":831:851  _radiant == (3*pi)/2 */\n      eq\n        /* \"plants/nft/contracts/CosSin.sol\":811:851  _radiant == pi/2 || _radiant == (3*pi)/2 */\n    tag_26:\n        /* \"plants/nft/contracts/CosSin.sol\":807:1498  if (_radiant == pi/2 || _radiant == (3*pi)/2 ) {... */\n      iszero\n      tag_29\n      jumpi\n        /* \"plants/nft/contracts/CosSin.sol\":872:876  true */\n      0x01\n        /* \"plants/nft/contracts/CosSin.sol\":862:876  _sign   = true */\n      swap3\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":894:895  0 */\n      0x00\n        /* \"plants/nft/contracts/CosSin.sol\":884:895  _output = 0 */\n      swap2\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":807:1498  if (_radiant == pi/2 || _radiant == (3*pi)/2 ) {... */\n      jump(tag_30)\n    tag_29:\n        /* \"plants/nft/contracts/CosSin.sol\":935:936  2 */\n      0x02\n        /* \"plants/nft/contracts/CosSin.sol\":932:934  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":932:936  pi/2 */\n      tag_31\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_31:\n        /* \"plants/nft/contracts/CosSin.sol\":921:929  _radiant */\n      dup5\n        /* \"plants/nft/contracts/CosSin.sol\":921:936  _radiant < pi/2 */\n      lt\n        /* \"plants/nft/contracts/CosSin.sol\":916:1290  if ( _radiant < pi/2 ) {... */\n      iszero\n      tag_32\n      jumpi\n        /* \"plants/nft/contracts/CosSin.sol\":957:961  true */\n      0x01\n        /* \"plants/nft/contracts/CosSin.sol\":949:961  _sign = true */\n      swap3\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":916:1290  if ( _radiant < pi/2 ) {... */\n      jump(tag_33)\n    tag_32:\n        /* \"plants/nft/contracts/CosSin.sol\":1016:1018  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":1004:1012  _radiant */\n      dup5\n        /* \"plants/nft/contracts/CosSin.sol\":1004:1018  _radiant <= pi */\n      gt\n        /* \"plants/nft/contracts/CosSin.sol\":1000:1290  if (_radiant <= pi ){... */\n      tag_34\n      jumpi\n        /* \"plants/nft/contracts/CosSin.sol\":1040:1045  false */\n      0x00\n        /* \"plants/nft/contracts/CosSin.sol\":1032:1045  _sign = false */\n      swap3\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1071:1079  _radiant */\n      dup4\n        /* \"plants/nft/contracts/CosSin.sol\":1068:1070  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":1068:1079  pi-_radiant */\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"plants/nft/contracts/CosSin.sol\":1057:1079  _radiant = pi-_radiant */\n      swap4\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1000:1290  if (_radiant <= pi ){... */\n      jump(tag_37)\n    tag_34:\n        /* \"plants/nft/contracts/CosSin.sol\":1118:1119  2 */\n      0x02\n        /* \"plants/nft/contracts/CosSin.sol\":1114:1116  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":1112:1113  3 */\n      0x03\n        /* \"plants/nft/contracts/CosSin.sol\":1112:1116  3*pi */\n      tag_38\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_38:\n        /* \"plants/nft/contracts/CosSin.sol\":1111:1119  (3*pi)/2 */\n      tag_39\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_39:\n        /* \"plants/nft/contracts/CosSin.sol\":1100:1108  _radiant */\n      dup5\n        /* \"plants/nft/contracts/CosSin.sol\":1100:1119  _radiant < (3*pi)/2 */\n      lt\n        /* \"plants/nft/contracts/CosSin.sol\":1096:1290  if (_radiant < (3*pi)/2 ){... */\n      iszero\n      tag_40\n      jumpi\n        /* \"plants/nft/contracts/CosSin.sol\":1141:1146  false */\n      0x00\n        /* \"plants/nft/contracts/CosSin.sol\":1133:1146  _sign = false */\n      swap3\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1178:1180  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":1169:1177  _radiant */\n      dup5\n        /* \"plants/nft/contracts/CosSin.sol\":1169:1180  _radiant-pi */\n      tag_41\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_41:\n        /* \"plants/nft/contracts/CosSin.sol\":1158:1180  _radiant = _radiant-pi */\n      swap4\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1096:1290  if (_radiant < (3*pi)/2 ){... */\n      jump(tag_42)\n    tag_40:\n        /* \"plants/nft/contracts/CosSin.sol\":1215:1217  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":1213:1214  2 */\n      0x02\n        /* \"plants/nft/contracts/CosSin.sol\":1213:1217  2*pi */\n      tag_43\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_43:\n        /* \"plants/nft/contracts/CosSin.sol\":1201:1209  _radiant */\n      dup5\n        /* \"plants/nft/contracts/CosSin.sol\":1201:1217  _radiant <= 2*pi */\n      gt\n        /* \"plants/nft/contracts/CosSin.sol\":1197:1290  if (_radiant <= 2*pi ){... */\n      tag_44\n      jumpi\n        /* \"plants/nft/contracts/CosSin.sol\":1239:1243  true */\n      0x01\n        /* \"plants/nft/contracts/CosSin.sol\":1231:1243  _sign = true */\n      swap3\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1271:1279  _radiant */\n      dup4\n        /* \"plants/nft/contracts/CosSin.sol\":1268:1270  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":1266:1267  2 */\n      0x02\n        /* \"plants/nft/contracts/CosSin.sol\":1266:1270  2*pi */\n      tag_45\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_45:\n        /* \"plants/nft/contracts/CosSin.sol\":1266:1279  2*pi-_radiant */\n      tag_46\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_46:\n        /* \"plants/nft/contracts/CosSin.sol\":1255:1279  _radiant = 2*pi-_radiant */\n      swap4\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1197:1290  if (_radiant <= 2*pi ){... */\n    tag_44:\n        /* \"plants/nft/contracts/CosSin.sol\":1096:1290  if (_radiant < (3*pi)/2 ){... */\n    tag_42:\n        /* \"plants/nft/contracts/CosSin.sol\":1000:1290  if (_radiant <= pi ){... */\n    tag_37:\n        /* \"plants/nft/contracts/CosSin.sol\":916:1290  if ( _radiant < pi/2 ) {... */\n    tag_33:\n        /* \"plants/nft/contracts/CosSin.sol\":1312:1321  _pow(n,6) */\n      tag_47\n        /* \"plants/nft/contracts/CosSin.sol\":1317:1318  n */\n      dup2\n        /* \"plants/nft/contracts/CosSin.sol\":1319:1320  6 */\n      0x06\n        /* \"plants/nft/contracts/CosSin.sol\":1312:1316  _pow */\n      tag_23\n        /* \"plants/nft/contracts/CosSin.sol\":1312:1321  _pow(n,6) */\n      jump\t// in\n    tag_47:\n        /* \"plants/nft/contracts/CosSin.sol\":1308:1311  720 */\n      0x02d0\n        /* \"plants/nft/contracts/CosSin.sol\":1308:1321  720*_pow(n,6) */\n      tag_48\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_48:\n        /* \"plants/nft/contracts/CosSin.sol\":1297:1321  _output  = 720*_pow(n,6) */\n      swap2\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1355:1371  _pow(_radiant,2) */\n      tag_49\n        /* \"plants/nft/contracts/CosSin.sol\":1360:1368  _radiant */\n      dup5\n        /* \"plants/nft/contracts/CosSin.sol\":1369:1370  2 */\n      0x02\n        /* \"plants/nft/contracts/CosSin.sol\":1355:1359  _pow */\n      tag_23\n        /* \"plants/nft/contracts/CosSin.sol\":1355:1371  _pow(_radiant,2) */\n      jump\t// in\n    tag_49:\n        /* \"plants/nft/contracts/CosSin.sol\":1345:1354  _pow(n,4) */\n      tag_50\n        /* \"plants/nft/contracts/CosSin.sol\":1350:1351  n */\n      dup3\n        /* \"plants/nft/contracts/CosSin.sol\":1352:1353  4 */\n      0x04\n        /* \"plants/nft/contracts/CosSin.sol\":1345:1349  _pow */\n      tag_23\n        /* \"plants/nft/contracts/CosSin.sol\":1345:1354  _pow(n,4) */\n      jump\t// in\n    tag_50:\n        /* \"plants/nft/contracts/CosSin.sol\":1341:1344  360 */\n      0x0168\n        /* \"plants/nft/contracts/CosSin.sol\":1341:1354  360*_pow(n,4) */\n      tag_51\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_51:\n        /* \"plants/nft/contracts/CosSin.sol\":1341:1371  360*_pow(n,4)*_pow(_radiant,2) */\n      tag_52\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_52:\n        /* \"plants/nft/contracts/CosSin.sol\":1329:1372  _output -= (360*_pow(n,4)*_pow(_radiant,2)) */\n      dup3\n      tag_53\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_53:\n      swap2\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1405:1421  _pow(_radiant,4) */\n      tag_54\n        /* \"plants/nft/contracts/CosSin.sol\":1410:1418  _radiant */\n      dup5\n        /* \"plants/nft/contracts/CosSin.sol\":1419:1420  4 */\n      0x04\n        /* \"plants/nft/contracts/CosSin.sol\":1405:1409  _pow */\n      tag_23\n        /* \"plants/nft/contracts/CosSin.sol\":1405:1421  _pow(_radiant,4) */\n      jump\t// in\n    tag_54:\n        /* \"plants/nft/contracts/CosSin.sol\":1395:1404  _pow(n,2) */\n      tag_55\n        /* \"plants/nft/contracts/CosSin.sol\":1400:1401  n */\n      dup3\n        /* \"plants/nft/contracts/CosSin.sol\":1402:1403  2 */\n      0x02\n        /* \"plants/nft/contracts/CosSin.sol\":1395:1399  _pow */\n      tag_23\n        /* \"plants/nft/contracts/CosSin.sol\":1395:1404  _pow(n,2) */\n      jump\t// in\n    tag_55:\n        /* \"plants/nft/contracts/CosSin.sol\":1392:1394  30 */\n      0x1e\n        /* \"plants/nft/contracts/CosSin.sol\":1392:1404  30*_pow(n,2) */\n      tag_56\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_56:\n        /* \"plants/nft/contracts/CosSin.sol\":1392:1421  30*_pow(n,2)*_pow(_radiant,4) */\n      tag_57\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_57:\n        /* \"plants/nft/contracts/CosSin.sol\":1380:1422  _output += (30*_pow(n,2)*_pow(_radiant,4)) */\n      dup3\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      swap2\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1441:1457  _pow(_radiant,6) */\n      tag_60\n        /* \"plants/nft/contracts/CosSin.sol\":1446:1454  _radiant */\n      dup5\n        /* \"plants/nft/contracts/CosSin.sol\":1455:1456  6 */\n      0x06\n        /* \"plants/nft/contracts/CosSin.sol\":1441:1445  _pow */\n      tag_23\n        /* \"plants/nft/contracts/CosSin.sol\":1441:1457  _pow(_radiant,6) */\n      jump\t// in\n    tag_60:\n        /* \"plants/nft/contracts/CosSin.sol\":1430:1457  _output -= _pow(_radiant,6) */\n      dup3\n      tag_61\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_61:\n      swap2\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1481:1490  _pow(n,5) */\n      tag_62\n        /* \"plants/nft/contracts/CosSin.sol\":1486:1487  n */\n      dup2\n        /* \"plants/nft/contracts/CosSin.sol\":1488:1489  5 */\n      0x05\n        /* \"plants/nft/contracts/CosSin.sol\":1481:1485  _pow */\n      tag_23\n        /* \"plants/nft/contracts/CosSin.sol\":1481:1490  _pow(n,5) */\n      jump\t// in\n    tag_62:\n        /* \"plants/nft/contracts/CosSin.sol\":1477:1480  720 */\n      0x02d0\n        /* \"plants/nft/contracts/CosSin.sol\":1477:1490  720*_pow(n,5) */\n      tag_63\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_63:\n        /* \"plants/nft/contracts/CosSin.sol\":1465:1491  _output /= (720*_pow(n,5)) */\n      dup3\n      tag_64\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_64:\n      swap2\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":807:1498  if (_radiant == pi/2 || _radiant == (3*pi)/2 ) {... */\n    tag_30:\n        /* \"plants/nft/contracts/CosSin.sol\":396:1502  {... */\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":320:1502  function cos(uint _radiant) public  view returns (bool _sign, uint _output) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"plants/nft/contracts/CosSin.sol\":1509:1926  function sin(uint _radiant) public view returns (bool _sign, uint _output) {... */\n    tag_13:\n        /* \"plants/nft/contracts/CosSin.sol\":1558:1568  bool _sign */\n      0x00\n        /* \"plants/nft/contracts/CosSin.sol\":1570:1582  uint _output */\n      dup1\n        /* \"plants/nft/contracts/CosSin.sol\":1607:1615  _radiant */\n      dup3\n        /* \"plants/nft/contracts/CosSin.sol\":1604:1605  0 */\n      0x00\n        /* \"plants/nft/contracts/CosSin.sol\":1604:1615  0<=_radiant */\n      gt\n      iszero\n        /* \"plants/nft/contracts/CosSin.sol\":1604:1635  0<=_radiant && _radiant <= 2*pi */\n      dup1\n      iszero\n      tag_66\n      jumpi\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1633:1635  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":1631:1632  2 */\n      0x02\n        /* \"plants/nft/contracts/CosSin.sol\":1631:1635  2*pi */\n      tag_67\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_67:\n        /* \"plants/nft/contracts/CosSin.sol\":1619:1627  _radiant */\n      dup4\n        /* \"plants/nft/contracts/CosSin.sol\":1619:1635  _radiant <= 2*pi */\n      gt\n      iszero\n        /* \"plants/nft/contracts/CosSin.sol\":1604:1635  0<=_radiant && _radiant <= 2*pi */\n    tag_66:\n        /* \"plants/nft/contracts/CosSin.sol\":1594:1718  require( (0<=_radiant && _radiant <= 2*pi) , \"Please choose _radiant between 0 and 2*pi=628318530718. Note: radiant*10^11.\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_21\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"plants/nft/contracts/CosSin.sol\":1768:1774  uint m */\n      0x00\n        /* \"plants/nft/contracts/CosSin.sol\":1780:1781  2 */\n      0x02\n        /* \"plants/nft/contracts/CosSin.sol\":1777:1779  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":1777:1781  pi/2 */\n      tag_70\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_70:\n        /* \"plants/nft/contracts/CosSin.sol\":1768:1781  uint m = pi/2 */\n      swap1\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1807:1808  2 */\n      0x02\n        /* \"plants/nft/contracts/CosSin.sol\":1804:1806  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":1804:1808  pi/2 */\n      tag_71\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_71:\n        /* \"plants/nft/contracts/CosSin.sol\":1795:1803  _radiant */\n      dup5\n        /* \"plants/nft/contracts/CosSin.sol\":1795:1808  _radiant>pi/2 */\n      gt\n        /* \"plants/nft/contracts/CosSin.sol\":1791:1846  if (_radiant>pi/2) {... */\n      iszero\n      tag_72\n      jumpi\n        /* \"plants/nft/contracts/CosSin.sol\":1833:1835  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":1831:1832  2 */\n      0x02\n        /* \"plants/nft/contracts/CosSin.sol\":1831:1835  2*pi */\n      tag_73\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_73:\n        /* \"plants/nft/contracts/CosSin.sol\":1829:1830  2 */\n      0x02\n        /* \"plants/nft/contracts/CosSin.sol\":1826:1828  pi */\n      sload(0x00)\n        /* \"plants/nft/contracts/CosSin.sol\":1826:1830  pi/2 */\n      tag_74\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_74:\n        /* \"plants/nft/contracts/CosSin.sol\":1826:1835  pi/2+2*pi */\n      tag_75\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_75:\n        /* \"plants/nft/contracts/CosSin.sol\":1822:1835  m = pi/2+2*pi */\n      swap1\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1791:1846  if (_radiant>pi/2) {... */\n    tag_72:\n        /* \"plants/nft/contracts/CosSin.sol\":1868:1876  _radiant */\n      dup4\n        /* \"plants/nft/contracts/CosSin.sol\":1866:1867  m */\n      dup2\n        /* \"plants/nft/contracts/CosSin.sol\":1866:1876  m-_radiant */\n      tag_76\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_76:\n        /* \"plants/nft/contracts/CosSin.sol\":1855:1876  _radiant = m-_radiant */\n      swap4\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1906:1919  cos(_radiant) */\n      tag_77\n        /* \"plants/nft/contracts/CosSin.sol\":1910:1918  _radiant */\n      dup5\n        /* \"plants/nft/contracts/CosSin.sol\":1906:1909  cos */\n      tag_8\n        /* \"plants/nft/contracts/CosSin.sol\":1906:1919  cos(_radiant) */\n      jump\t// in\n    tag_77:\n        /* \"plants/nft/contracts/CosSin.sol\":1886:1919  (_sign , _output) = cos(_radiant) */\n      dup1\n      swap4\n      pop\n      dup2\n      swap5\n      pop\n      pop\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1584:1926  {... */\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":1509:1926  function sin(uint _radiant) public view returns (bool _sign, uint _output) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"plants/nft/contracts/CosSin.sol\":109:316  function _pow(uint _x, uint _p) internal pure returns (uint _y) {... */\n    tag_23:\n        /* \"plants/nft/contracts/CosSin.sol\":164:171  uint _y */\n      0x00\n        /* \"plants/nft/contracts/CosSin.sol\":191:192  0 */\n      dup1\n        /* \"plants/nft/contracts/CosSin.sol\":187:189  _p */\n      dup3\n        /* \"plants/nft/contracts/CosSin.sol\":187:192  _p>=0 */\n      lt\n      iszero\n        /* \"plants/nft/contracts/CosSin.sol\":179:210  require(_p>=0, \"Choose _p>=0.\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"plants/nft/contracts/CosSin.sol\":221:222  1 */\n      0x01\n        /* \"plants/nft/contracts/CosSin.sol\":216:222  _y = 1 */\n      swap1\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":235:236  0 */\n      0x00\n        /* \"plants/nft/contracts/CosSin.sol\":232:234  _p */\n      dup3\n        /* \"plants/nft/contracts/CosSin.sol\":232:236  _p>0 */\n      gt\n        /* \"plants/nft/contracts/CosSin.sol\":228:312  if (_p>0) {... */\n      iszero\n      tag_82\n      jumpi\n        /* \"plants/nft/contracts/CosSin.sol\":251:257  uint i */\n      0x00\n        /* \"plants/nft/contracts/CosSin.sol\":258:259  1 */\n      0x01\n        /* \"plants/nft/contracts/CosSin.sol\":251:259  uint i=1 */\n      swap1\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":246:304  for (uint i=1; i<=_p; i++) {... */\n    tag_83:\n        /* \"plants/nft/contracts/CosSin.sol\":264:266  _p */\n      dup3\n        /* \"plants/nft/contracts/CosSin.sol\":261:262  i */\n      dup2\n        /* \"plants/nft/contracts/CosSin.sol\":261:266  i<=_p */\n      gt\n        /* \"plants/nft/contracts/CosSin.sol\":246:304  for (uint i=1; i<=_p; i++) {... */\n      tag_84\n      jumpi\n        /* \"plants/nft/contracts/CosSin.sol\":291:293  _x */\n      dup4\n        /* \"plants/nft/contracts/CosSin.sol\":285:293  _y *= _x */\n      dup3\n      tag_86\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_86:\n      swap2\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":268:271  i++ */\n      dup1\n      dup1\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      swap2\n      pop\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":246:304  for (uint i=1; i<=_p; i++) {... */\n      jump(tag_83)\n    tag_84:\n      pop\n        /* \"plants/nft/contracts/CosSin.sol\":228:312  if (_p>0) {... */\n    tag_82:\n        /* \"plants/nft/contracts/CosSin.sol\":109:316  function _pow(uint _x, uint _p) internal pure returns (uint _y) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_90:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_92\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_7:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":228:347   */\n    tag_95:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_98\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_90\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:596   */\n    tag_99:\n        /* \"#utility.yul\":568:589   */\n      tag_101\n        /* \"#utility.yul\":583:588   */\n      dup2\n        /* \"#utility.yul\":568:589   */\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":563:566   */\n      dup3\n        /* \"#utility.yul\":556:590   */\n      mstore\n        /* \"#utility.yul\":487:596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":602:968   */\n    tag_103:\n        /* \"#utility.yul\":744:747   */\n      0x00\n        /* \"#utility.yul\":765:832   */\n      tag_105\n        /* \"#utility.yul\":829:831   */\n      0x0d\n        /* \"#utility.yul\":824:827   */\n      dup4\n        /* \"#utility.yul\":765:832   */\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":758:832   */\n      swap2\n      pop\n        /* \"#utility.yul\":841:934   */\n      tag_107\n        /* \"#utility.yul\":930:933   */\n      dup3\n        /* \"#utility.yul\":841:934   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":959:961   */\n      0x20\n        /* \"#utility.yul\":954:957   */\n      dup3\n        /* \"#utility.yul\":950:962   */\n      add\n        /* \"#utility.yul\":943:962   */\n      swap1\n      pop\n        /* \"#utility.yul\":602:968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":974:1340   */\n    tag_109:\n        /* \"#utility.yul\":1116:1119   */\n      0x00\n        /* \"#utility.yul\":1137:1204   */\n      tag_111\n        /* \"#utility.yul\":1201:1203   */\n      0x4c\n        /* \"#utility.yul\":1196:1199   */\n      dup4\n        /* \"#utility.yul\":1137:1204   */\n      tag_106\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1130:1204   */\n      swap2\n      pop\n        /* \"#utility.yul\":1213:1306   */\n      tag_112\n        /* \"#utility.yul\":1302:1305   */\n      dup3\n        /* \"#utility.yul\":1213:1306   */\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1331:1333   */\n      0x60\n        /* \"#utility.yul\":1326:1329   */\n      dup3\n        /* \"#utility.yul\":1322:1334   */\n      add\n        /* \"#utility.yul\":1315:1334   */\n      swap1\n      pop\n        /* \"#utility.yul\":974:1340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1346:1464   */\n    tag_114:\n        /* \"#utility.yul\":1433:1457   */\n      tag_116\n        /* \"#utility.yul\":1451:1456   */\n      dup2\n        /* \"#utility.yul\":1433:1457   */\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1428:1431   */\n      dup3\n        /* \"#utility.yul\":1421:1458   */\n      mstore\n        /* \"#utility.yul\":1346:1464   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1470:1790   */\n    tag_10:\n        /* \"#utility.yul\":1585:1589   */\n      0x00\n        /* \"#utility.yul\":1623:1625   */\n      0x40\n        /* \"#utility.yul\":1612:1621   */\n      dup3\n        /* \"#utility.yul\":1608:1626   */\n      add\n        /* \"#utility.yul\":1600:1626   */\n      swap1\n      pop\n        /* \"#utility.yul\":1636:1701   */\n      tag_119\n        /* \"#utility.yul\":1698:1699   */\n      0x00\n        /* \"#utility.yul\":1687:1696   */\n      dup4\n        /* \"#utility.yul\":1683:1700   */\n      add\n        /* \"#utility.yul\":1674:1680   */\n      dup6\n        /* \"#utility.yul\":1636:1701   */\n      tag_99\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1711:1783   */\n      tag_120\n        /* \"#utility.yul\":1779:1781   */\n      0x20\n        /* \"#utility.yul\":1768:1777   */\n      dup4\n        /* \"#utility.yul\":1764:1782   */\n      add\n        /* \"#utility.yul\":1755:1761   */\n      dup5\n        /* \"#utility.yul\":1711:1783   */\n      tag_114\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1470:1790   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1796:2215   */\n    tag_81:\n        /* \"#utility.yul\":1962:1966   */\n      0x00\n        /* \"#utility.yul\":2000:2002   */\n      0x20\n        /* \"#utility.yul\":1989:1998   */\n      dup3\n        /* \"#utility.yul\":1985:2003   */\n      add\n        /* \"#utility.yul\":1977:2003   */\n      swap1\n      pop\n        /* \"#utility.yul\":2049:2058   */\n      dup2\n        /* \"#utility.yul\":2043:2047   */\n      dup2\n        /* \"#utility.yul\":2039:2059   */\n      sub\n        /* \"#utility.yul\":2035:2036   */\n      0x00\n        /* \"#utility.yul\":2024:2033   */\n      dup4\n        /* \"#utility.yul\":2020:2037   */\n      add\n        /* \"#utility.yul\":2013:2060   */\n      mstore\n        /* \"#utility.yul\":2077:2208   */\n      tag_122\n        /* \"#utility.yul\":2203:2207   */\n      dup2\n        /* \"#utility.yul\":2077:2208   */\n      tag_103\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2069:2208   */\n      swap1\n      pop\n        /* \"#utility.yul\":1796:2215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2221:2640   */\n    tag_21:\n        /* \"#utility.yul\":2387:2391   */\n      0x00\n        /* \"#utility.yul\":2425:2427   */\n      0x20\n        /* \"#utility.yul\":2414:2423   */\n      dup3\n        /* \"#utility.yul\":2410:2428   */\n      add\n        /* \"#utility.yul\":2402:2428   */\n      swap1\n      pop\n        /* \"#utility.yul\":2474:2483   */\n      dup2\n        /* \"#utility.yul\":2468:2472   */\n      dup2\n        /* \"#utility.yul\":2464:2484   */\n      sub\n        /* \"#utility.yul\":2460:2461   */\n      0x00\n        /* \"#utility.yul\":2449:2458   */\n      dup4\n        /* \"#utility.yul\":2445:2462   */\n      add\n        /* \"#utility.yul\":2438:2485   */\n      mstore\n        /* \"#utility.yul\":2502:2633   */\n      tag_124\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2502:2633   */\n      tag_109\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2494:2633   */\n      swap1\n      pop\n        /* \"#utility.yul\":2221:2640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2727:2896   */\n    tag_106:\n        /* \"#utility.yul\":2811:2822   */\n      0x00\n        /* \"#utility.yul\":2845:2851   */\n      dup3\n        /* \"#utility.yul\":2840:2843   */\n      dup3\n        /* \"#utility.yul\":2833:2852   */\n      mstore\n        /* \"#utility.yul\":2885:2889   */\n      0x20\n        /* \"#utility.yul\":2880:2883   */\n      dup3\n        /* \"#utility.yul\":2876:2890   */\n      add\n        /* \"#utility.yul\":2861:2890   */\n      swap1\n      pop\n        /* \"#utility.yul\":2727:2896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2902:3207   */\n    tag_59:\n        /* \"#utility.yul\":2942:2945   */\n      0x00\n        /* \"#utility.yul\":2961:2981   */\n      tag_129\n        /* \"#utility.yul\":2979:2980   */\n      dup3\n        /* \"#utility.yul\":2961:2981   */\n      tag_117\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2956:2981   */\n      swap2\n      pop\n        /* \"#utility.yul\":2995:3015   */\n      tag_130\n        /* \"#utility.yul\":3013:3014   */\n      dup4\n        /* \"#utility.yul\":2995:3015   */\n      tag_117\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2990:3015   */\n      swap3\n      pop\n        /* \"#utility.yul\":3149:3150   */\n      dup3\n        /* \"#utility.yul\":3081:3147   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3077:3151   */\n      sub\n        /* \"#utility.yul\":3074:3075   */\n      dup3\n        /* \"#utility.yul\":3071:3152   */\n      gt\n        /* \"#utility.yul\":3068:3175   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":3155:3173   */\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3068:3175   */\n    tag_131:\n        /* \"#utility.yul\":3199:3200   */\n      dup3\n        /* \"#utility.yul\":3196:3197   */\n      dup3\n        /* \"#utility.yul\":3192:3201   */\n      add\n        /* \"#utility.yul\":3185:3201   */\n      swap1\n      pop\n        /* \"#utility.yul\":2902:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3398   */\n    tag_25:\n        /* \"#utility.yul\":3253:3254   */\n      0x00\n        /* \"#utility.yul\":3270:3290   */\n      tag_135\n        /* \"#utility.yul\":3288:3289   */\n      dup3\n        /* \"#utility.yul\":3270:3290   */\n      tag_117\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3265:3290   */\n      swap2\n      pop\n        /* \"#utility.yul\":3304:3324   */\n      tag_136\n        /* \"#utility.yul\":3322:3323   */\n      dup4\n        /* \"#utility.yul\":3304:3324   */\n      tag_117\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3299:3324   */\n      swap3\n      pop\n        /* \"#utility.yul\":3343:3344   */\n      dup3\n        /* \"#utility.yul\":3333:3368   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":3348:3366   */\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3333:3368   */\n    tag_137:\n        /* \"#utility.yul\":3390:3391   */\n      dup3\n        /* \"#utility.yul\":3387:3388   */\n      dup3\n        /* \"#utility.yul\":3383:3392   */\n      div\n        /* \"#utility.yul\":3378:3392   */\n      swap1\n      pop\n        /* \"#utility.yul\":3213:3398   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3404:3752   */\n    tag_18:\n        /* \"#utility.yul\":3444:3451   */\n      0x00\n        /* \"#utility.yul\":3467:3487   */\n      tag_141\n        /* \"#utility.yul\":3485:3486   */\n      dup3\n        /* \"#utility.yul\":3467:3487   */\n      tag_117\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3462:3487   */\n      swap2\n      pop\n        /* \"#utility.yul\":3501:3521   */\n      tag_142\n        /* \"#utility.yul\":3519:3520   */\n      dup4\n        /* \"#utility.yul\":3501:3521   */\n      tag_117\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3496:3521   */\n      swap3\n      pop\n        /* \"#utility.yul\":3689:3690   */\n      dup2\n        /* \"#utility.yul\":3621:3687   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3617:3691   */\n      div\n        /* \"#utility.yul\":3614:3615   */\n      dup4\n        /* \"#utility.yul\":3611:3692   */\n      gt\n        /* \"#utility.yul\":3606:3607   */\n      dup3\n        /* \"#utility.yul\":3599:3608   */\n      iszero\n        /* \"#utility.yul\":3592:3609   */\n      iszero\n        /* \"#utility.yul\":3588:3693   */\n      and\n        /* \"#utility.yul\":3585:3716   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":3696:3714   */\n      tag_144\n      tag_133\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3585:3716   */\n    tag_143:\n        /* \"#utility.yul\":3744:3745   */\n      dup3\n        /* \"#utility.yul\":3741:3742   */\n      dup3\n        /* \"#utility.yul\":3737:3746   */\n      mul\n        /* \"#utility.yul\":3726:3746   */\n      swap1\n      pop\n        /* \"#utility.yul\":3404:3752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3758:3949   */\n    tag_36:\n        /* \"#utility.yul\":3798:3802   */\n      0x00\n        /* \"#utility.yul\":3818:3838   */\n      tag_146\n        /* \"#utility.yul\":3836:3837   */\n      dup3\n        /* \"#utility.yul\":3818:3838   */\n      tag_117\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3813:3838   */\n      swap2\n      pop\n        /* \"#utility.yul\":3852:3872   */\n      tag_147\n        /* \"#utility.yul\":3870:3871   */\n      dup4\n        /* \"#utility.yul\":3852:3872   */\n      tag_117\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3847:3872   */\n      swap3\n      pop\n        /* \"#utility.yul\":3891:3892   */\n      dup3\n        /* \"#utility.yul\":3888:3889   */\n      dup3\n        /* \"#utility.yul\":3885:3893   */\n      lt\n        /* \"#utility.yul\":3882:3916   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":3896:3914   */\n      tag_149\n      tag_133\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3882:3916   */\n    tag_148:\n        /* \"#utility.yul\":3941:3942   */\n      dup3\n        /* \"#utility.yul\":3938:3939   */\n      dup3\n        /* \"#utility.yul\":3934:3943   */\n      sub\n        /* \"#utility.yul\":3926:3943   */\n      swap1\n      pop\n        /* \"#utility.yul\":3758:3949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3955:4045   */\n    tag_102:\n        /* \"#utility.yul\":3989:3996   */\n      0x00\n        /* \"#utility.yul\":4032:4037   */\n      dup2\n        /* \"#utility.yul\":4025:4038   */\n      iszero\n        /* \"#utility.yul\":4018:4039   */\n      iszero\n        /* \"#utility.yul\":4007:4039   */\n      swap1\n      pop\n        /* \"#utility.yul\":3955:4045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4051:4128   */\n    tag_117:\n        /* \"#utility.yul\":4088:4095   */\n      0x00\n        /* \"#utility.yul\":4117:4122   */\n      dup2\n        /* \"#utility.yul\":4106:4122   */\n      swap1\n      pop\n        /* \"#utility.yul\":4051:4128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4134:4367   */\n    tag_88:\n        /* \"#utility.yul\":4173:4176   */\n      0x00\n        /* \"#utility.yul\":4196:4220   */\n      tag_153\n        /* \"#utility.yul\":4214:4219   */\n      dup3\n        /* \"#utility.yul\":4196:4220   */\n      tag_117\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4187:4220   */\n      swap2\n      pop\n        /* \"#utility.yul\":4242:4308   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4235:4240   */\n      dup3\n        /* \"#utility.yul\":4232:4309   */\n      eq\n        /* \"#utility.yul\":4229:4332   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":4312:4330   */\n      tag_155\n      tag_133\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4229:4332   */\n    tag_154:\n        /* \"#utility.yul\":4359:4360   */\n      0x01\n        /* \"#utility.yul\":4352:4357   */\n      dup3\n        /* \"#utility.yul\":4348:4361   */\n      add\n        /* \"#utility.yul\":4341:4361   */\n      swap1\n      pop\n        /* \"#utility.yul\":4134:4367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4373:4553   */\n    tag_133:\n        /* \"#utility.yul\":4421:4498   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4418:4419   */\n      0x00\n        /* \"#utility.yul\":4411:4499   */\n      mstore\n        /* \"#utility.yul\":4518:4522   */\n      0x11\n        /* \"#utility.yul\":4515:4516   */\n      0x04\n        /* \"#utility.yul\":4508:4523   */\n      mstore\n        /* \"#utility.yul\":4542:4546   */\n      0x24\n        /* \"#utility.yul\":4539:4540   */\n      0x00\n        /* \"#utility.yul\":4532:4547   */\n      revert\n        /* \"#utility.yul\":4559:4739   */\n    tag_139:\n        /* \"#utility.yul\":4607:4684   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4604:4605   */\n      0x00\n        /* \"#utility.yul\":4597:4685   */\n      mstore\n        /* \"#utility.yul\":4704:4708   */\n      0x12\n        /* \"#utility.yul\":4701:4702   */\n      0x04\n        /* \"#utility.yul\":4694:4709   */\n      mstore\n        /* \"#utility.yul\":4728:4732   */\n      0x24\n        /* \"#utility.yul\":4725:4726   */\n      0x00\n        /* \"#utility.yul\":4718:4733   */\n      revert\n        /* \"#utility.yul\":4868:4985   */\n    tag_97:\n        /* \"#utility.yul\":4977:4978   */\n      0x00\n        /* \"#utility.yul\":4974:4975   */\n      dup1\n        /* \"#utility.yul\":4967:4979   */\n      revert\n        /* \"#utility.yul\":4991:5154   */\n    tag_108:\n        /* \"#utility.yul\":5131:5146   */\n      0x43686f6f7365205f703e3d302e00000000000000000000000000000000000000\n        /* \"#utility.yul\":5127:5128   */\n      0x00\n        /* \"#utility.yul\":5119:5125   */\n      dup3\n        /* \"#utility.yul\":5115:5129   */\n      add\n        /* \"#utility.yul\":5108:5147   */\n      mstore\n        /* \"#utility.yul\":4991:5154   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5160:5460   */\n    tag_113:\n        /* \"#utility.yul\":5300:5334   */\n      0x506c656173652063686f6f7365205f72616469616e74206265747765656e2030\n        /* \"#utility.yul\":5296:5297   */\n      0x00\n        /* \"#utility.yul\":5288:5294   */\n      dup3\n        /* \"#utility.yul\":5284:5298   */\n      add\n        /* \"#utility.yul\":5277:5335   */\n      mstore\n        /* \"#utility.yul\":5369:5403   */\n      0x20616e6420322a70693d3632383331383533303731382e204e6f74653a207261\n        /* \"#utility.yul\":5364:5366   */\n      0x20\n        /* \"#utility.yul\":5356:5362   */\n      dup3\n        /* \"#utility.yul\":5352:5367   */\n      add\n        /* \"#utility.yul\":5345:5404   */\n      mstore\n        /* \"#utility.yul\":5438:5452   */\n      0x6469616e742a31305e31312e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":5433:5435   */\n      0x40\n        /* \"#utility.yul\":5425:5431   */\n      dup3\n        /* \"#utility.yul\":5421:5436   */\n      add\n        /* \"#utility.yul\":5414:5453   */\n      mstore\n        /* \"#utility.yul\":5160:5460   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5466:5588   */\n    tag_93:\n        /* \"#utility.yul\":5539:5563   */\n      tag_164\n        /* \"#utility.yul\":5557:5562   */\n      dup2\n        /* \"#utility.yul\":5539:5563   */\n      tag_117\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":5532:5537   */\n      dup2\n        /* \"#utility.yul\":5529:5564   */\n      eq\n        /* \"#utility.yul\":5519:5582   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":5578:5579   */\n      0x00\n        /* \"#utility.yul\":5575:5576   */\n      dup1\n        /* \"#utility.yul\":5568:5580   */\n      revert\n        /* \"#utility.yul\":5519:5582   */\n    tag_165:\n        /* \"#utility.yul\":5466:5588   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208e01bbae362c6996f275cf610376914732e3aa7a5347a9baee98ab4998f420bc64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405264492559f64f60005534801561001957600080fd5b50610820806100296000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a58b00ba1461003b578063cb5cc1091461006c575b600080fd5b61005560048036038101906100509190610453565b61009d565b6040516100639291906104e4565b60405180910390f35b61008660048036038101906100819190610453565b6102db565b6040516100949291906104e4565b60405180910390f35b600080826000111580156100bf575060005460026100bb91906105e5565b8311155b6100fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f59061052d565b60405180910390fd5b600061010c600a600b6103b5565b9050600260005461011d91906105b4565b84148061014357506002600054600361013691906105e5565b61014091906105b4565b84145b156101555760019250600091506102d5565b600260005461016491906105b4565b841015610174576001925061020a565b600054841161019657600092508360005461018f919061063f565b9350610209565b600260005460036101a791906105e5565b6101b191906105b4565b8410156101d15760009250600054846101ca919061063f565b9350610208565b60005460026101e091906105e5565b841161020757600192508360005460026101fa91906105e5565b610204919061063f565b93505b5b5b5b6102158160066103b5565b6102d061022291906105e5565b915061022f8460026103b5565b61023a8260046103b5565b61016861024791906105e5565b61025191906105e5565b8261025c919061063f565b91506102698460046103b5565b6102748260026103b5565b601e61028091906105e5565b61028a91906105e5565b82610295919061055e565b91506102a28460066103b5565b826102ad919061063f565b91506102ba8160056103b5565b6102d06102c791906105e5565b826102d291906105b4565b91505b50915091565b600080826000111580156102fd575060005460026102f991906105e5565b8311155b61033c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103339061052d565b60405180910390fd5b6000600260005461034d91906105b4565b9050600260005461035e91906105b4565b84111561039057600054600261037491906105e5565b600260005461038391906105b4565b61038d919061055e565b90505b838161039c919061063f565b93506103a78461009d565b809350819450505050915091565b6000808210156103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f19061050d565b60405180910390fd5b600190506000821115610438576000600190505b82811161043657838261042191906105e5565b9150808061042e90610689565b91505061040e565b505b92915050565b60008135905061044d816107d3565b92915050565b60006020828403121561046957610468610730565b5b60006104778482850161043e565b91505092915050565b61048981610673565b82525050565b600061049c600d8361054d565b91506104a782610735565b602082019050919050565b60006104bf604c8361054d565b91506104ca8261075e565b606082019050919050565b6104de8161067f565b82525050565b60006040820190506104f96000830185610480565b61050660208301846104d5565b9392505050565b600060208201905081810360008301526105268161048f565b9050919050565b60006020820190508181036000830152610546816104b2565b9050919050565b600082825260208201905092915050565b60006105698261067f565b91506105748361067f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105a9576105a86106d2565b5b828201905092915050565b60006105bf8261067f565b91506105ca8361067f565b9250826105da576105d9610701565b5b828204905092915050565b60006105f08261067f565b91506105fb8361067f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610634576106336106d2565b5b828202905092915050565b600061064a8261067f565b91506106558361067f565b925082821015610668576106676106d2565b5b828203905092915050565b60008115159050919050565b6000819050919050565b60006106948261067f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156106c7576106c66106d2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f43686f6f7365205f703e3d302e00000000000000000000000000000000000000600082015250565b7f506c656173652063686f6f7365205f72616469616e74206265747765656e203060008201527f20616e6420322a70693d3632383331383533303731382e204e6f74653a20726160208201527f6469616e742a31305e31312e0000000000000000000000000000000000000000604082015250565b6107dc8161067f565b81146107e757600080fd5b5056fea26469706673582212208e01bbae362c6996f275cf610376914732e3aa7a5347a9baee98ab4998f420bc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH5 0x492559F64F PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x820 DUP1 PUSH2 0x29 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA58B00BA EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xCB5CC109 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x453 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP3 SWAP2 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x453 JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP3 SWAP2 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0xBF JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x2 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST PUSH2 0xFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10C PUSH1 0xA PUSH1 0xB PUSH2 0x3B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST DUP5 EQ DUP1 PUSH2 0x143 JUMPI POP PUSH1 0x2 PUSH1 0x0 SLOAD PUSH1 0x3 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST DUP5 EQ JUMPDEST ISZERO PUSH2 0x155 JUMPI PUSH1 0x1 SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x174 JUMPI PUSH1 0x1 SWAP3 POP PUSH2 0x20A JUMP JUMPDEST PUSH1 0x0 SLOAD DUP5 GT PUSH2 0x196 JUMPI PUSH1 0x0 SWAP3 POP DUP4 PUSH1 0x0 SLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST SWAP4 POP PUSH2 0x209 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD PUSH1 0x3 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 SWAP3 POP PUSH1 0x0 SLOAD DUP5 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST SWAP4 POP PUSH2 0x208 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x2 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST DUP5 GT PUSH2 0x207 JUMPI PUSH1 0x1 SWAP3 POP DUP4 PUSH1 0x0 SLOAD PUSH1 0x2 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST SWAP4 POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH2 0x215 DUP2 PUSH1 0x6 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x22F DUP5 PUSH1 0x2 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x23A DUP3 PUSH1 0x4 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x168 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST DUP3 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST SWAP2 POP PUSH2 0x269 DUP5 PUSH1 0x4 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x274 DUP3 PUSH1 0x2 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x1E PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST DUP3 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x55E JUMP JUMPDEST SWAP2 POP PUSH2 0x2A2 DUP5 PUSH1 0x6 PUSH2 0x3B5 JUMP JUMPDEST DUP3 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA DUP2 PUSH1 0x5 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST DUP3 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0x2FD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x2 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x333 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 SLOAD PUSH1 0x2 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x55E JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 DUP2 PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST SWAP4 POP PUSH2 0x3A7 DUP5 PUSH2 0x9D JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 LT ISZERO PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F1 SWAP1 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x436 JUMPI DUP4 DUP3 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x42E SWAP1 PUSH2 0x689 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x40E JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x44D DUP2 PUSH2 0x7D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x469 JUMPI PUSH2 0x468 PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x477 DUP5 DUP3 DUP6 ADD PUSH2 0x43E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x489 DUP2 PUSH2 0x673 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49C PUSH1 0xD DUP4 PUSH2 0x54D JUMP JUMPDEST SWAP2 POP PUSH2 0x4A7 DUP3 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BF PUSH1 0x4C DUP4 PUSH2 0x54D JUMP JUMPDEST SWAP2 POP PUSH2 0x4CA DUP3 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x67F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4F9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x506 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x526 DUP2 PUSH2 0x48F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x546 DUP2 PUSH2 0x4B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x569 DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0x574 DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x5A9 JUMPI PUSH2 0x5A8 PUSH2 0x6D2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BF DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0x5CA DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5DA JUMPI PUSH2 0x5D9 PUSH2 0x701 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F0 DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0x5FB DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x634 JUMPI PUSH2 0x633 PUSH2 0x6D2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x64A DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0x655 DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x668 JUMPI PUSH2 0x667 PUSH2 0x6D2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x694 DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x6C7 JUMPI PUSH2 0x6C6 PUSH2 0x6D2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x43686F6F7365205F703E3D302E00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x506C656173652063686F6F7365205F72616469616E74206265747765656E2030 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20616E6420322A70693D3632383331383533303731382E204E6F74653A207261 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6469616E742A31305E31312E0000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x7DC DUP2 PUSH2 0x67F JUMP JUMPDEST DUP2 EQ PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 ADD 0xBB 0xAE CALLDATASIZE 0x2C PUSH10 0x96F275CF610376914732 0xE3 0xAA PUSH27 0x5347A9BAEE98AB4998F420BC64736F6C6343000807003300000000 ",
							"sourceMap": "61:1869:0:-:0;;;92:12;82:22;;61:1869;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_pow_46": {
									"entryPoint": 949,
									"id": 46,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@cos_223": {
									"entryPoint": 157,
									"id": 223,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@sin_284": {
									"entryPoint": 731,
									"id": 284,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 1252,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92": {
									"entryPoint": 1886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5591:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "563:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "583:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "568:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "568:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "534:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "541:3:1",
														"type": ""
													}
												],
												"src": "487:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "824:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "829:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "765:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "758:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "930:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3",
																	"nodeType": "YulIdentifier",
																	"src": "841:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "841:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "841:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "943:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "954:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "959:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "950:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "943:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "744:3:1",
														"type": ""
													}
												],
												"src": "602:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1120:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1130:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1196:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1201:2:1",
																		"type": "",
																		"value": "76"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1137:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1130:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1302:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92",
																	"nodeType": "YulIdentifier",
																	"src": "1213:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1213:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1315:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1326:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1331:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1322:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1108:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1116:3:1",
														"type": ""
													}
												],
												"src": "974:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1411:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1428:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1451:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1433:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1421:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1421:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1421:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1399:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1406:3:1",
														"type": ""
													}
												],
												"src": "1346:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1590:200:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1600:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1612:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1623:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1608:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1600:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1674:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1687:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1698:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1683:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1683:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1636:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1636:65:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1755:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1768:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1779:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1764:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1711:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1711:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1711:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1554:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1566:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1574:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1585:4:1",
														"type": ""
													}
												],
												"src": "1470:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1967:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1977:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1989:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2000:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1977:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2024:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2035:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2020:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2020:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2043:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2039:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2013:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2069:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2203:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2077:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2077:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1947:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1962:4:1",
														"type": ""
													}
												],
												"src": "1796:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2392:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2402:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2414:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2425:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2410:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2410:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2402:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2449:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2460:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2445:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2445:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2468:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2474:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2464:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2438:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2438:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2438:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2494:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2628:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2502:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2372:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2387:4:1",
														"type": ""
													}
												],
												"src": "2221:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2686:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2696:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2706:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2706:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2696:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2679:6:1",
														"type": ""
													}
												],
												"src": "2646:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2823:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2840:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2845:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2833:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2861:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2880:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2885:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2861:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2795:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2800:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2811:11:1",
														"type": ""
													}
												],
												"src": "2727:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2946:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2956:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2979:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2961:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2961:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2956:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2990:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3013:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2990:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3153:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3155:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3155:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3155:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3074:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3081:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3149:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3077:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3077:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3071:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3071:81:1"
															},
															"nodeType": "YulIf",
															"src": "3068:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3185:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3196:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3199:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3192:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3192:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3185:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2933:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2936:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2942:3:1",
														"type": ""
													}
												],
												"src": "2902:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3255:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3265:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3288:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3270:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3270:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3265:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3299:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3322:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3304:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3304:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3299:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3346:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "3348:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3348:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3348:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3343:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3336:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3336:9:1"
															},
															"nodeType": "YulIf",
															"src": "3333:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3378:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3387:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3390:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3383:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3378:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3244:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3247:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3253:1:1",
														"type": ""
													}
												],
												"src": "3213:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3452:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3462:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3485:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3467:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3462:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3496:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3519:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3501:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3496:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3694:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3696:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3696:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3696:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3606:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3599:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3599:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3592:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3592:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3614:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3621:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3689:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3617:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3617:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3611:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3611:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3588:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:105:1"
															},
															"nodeType": "YulIf",
															"src": "3585:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3726:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3741:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3744:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3737:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3737:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3726:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3435:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3438:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3444:7:1",
														"type": ""
													}
												],
												"src": "3404:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3803:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3813:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3836:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3818:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3818:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3813:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3847:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3870:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3852:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3852:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3847:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3894:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3896:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3896:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3896:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3888:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3891:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3885:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3885:8:1"
															},
															"nodeType": "YulIf",
															"src": "3882:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3926:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3938:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3941:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3934:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3934:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3926:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3789:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3792:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3798:4:1",
														"type": ""
													}
												],
												"src": "3758:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3997:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4007:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4032:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4025:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4025:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4018:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4018:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4007:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3979:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3989:7:1",
														"type": ""
													}
												],
												"src": "3955:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4096:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4106:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4117:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4106:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4078:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4088:7:1",
														"type": ""
													}
												],
												"src": "4051:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4177:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4187:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4214:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4196:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4187:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4310:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4312:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4312:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4312:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4235:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4242:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4232:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4232:77:1"
															},
															"nodeType": "YulIf",
															"src": "4229:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4341:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4352:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4359:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4348:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4348:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4341:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4163:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4173:3:1",
														"type": ""
													}
												],
												"src": "4134:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4401:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4418:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4421:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4411:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4411:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4411:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4515:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4518:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4508:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4508:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4539:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4542:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4532:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4532:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4373:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4587:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4607:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4597:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4597:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4701:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4704:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4694:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4694:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4694:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4725:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4728:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4718:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4718:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4718:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4559:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4834:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4851:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4854:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4844:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4844:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4745:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4957:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4974:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4977:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4967:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4967:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4967:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4868:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5097:57:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5119:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5127:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5115:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5115:14:1"
																	},
																	{
																		"hexValue": "43686f6f7365205f703e3d302e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5131:15:1",
																		"type": "",
																		"value": "Choose _p>=0."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5108:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5108:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5108:39:1"
														}
													]
												},
												"name": "store_literal_in_memory_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5089:6:1",
														"type": ""
													}
												],
												"src": "4991:163:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5266:194:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5288:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5296:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5284:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5284:14:1"
																	},
																	{
																		"hexValue": "506c656173652063686f6f7365205f72616469616e74206265747765656e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5300:34:1",
																		"type": "",
																		"value": "Please choose _radiant between 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5277:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5277:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5277:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5356:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5364:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5352:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5352:15:1"
																	},
																	{
																		"hexValue": "20616e6420322a70693d3632383331383533303731382e204e6f74653a207261",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5369:34:1",
																		"type": "",
																		"value": " and 2*pi=628318530718. Note: ra"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5345:59:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5425:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5433:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5421:15:1"
																	},
																	{
																		"hexValue": "6469616e742a31305e31312e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5438:14:1",
																		"type": "",
																		"value": "diant*10^11."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:39:1"
														}
													]
												},
												"name": "store_literal_in_memory_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5258:6:1",
														"type": ""
													}
												],
												"src": "5160:300:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5509:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5566:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5575:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5578:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5568:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5568:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5568:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5532:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5557:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5539:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5539:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5529:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5529:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5522:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5522:43:1"
															},
															"nodeType": "YulIf",
															"src": "5519:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5502:5:1",
														"type": ""
													}
												],
												"src": "5466:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 76)\n        store_literal_in_memory_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Choose _p>=0.\")\n\n    }\n\n    function store_literal_in_memory_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please choose _radiant between 0\")\n\n        mstore(add(memPtr, 32), \" and 2*pi=628318530718. Note: ra\")\n\n        mstore(add(memPtr, 64), \"diant*10^11.\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063a58b00ba1461003b578063cb5cc1091461006c575b600080fd5b61005560048036038101906100509190610453565b61009d565b6040516100639291906104e4565b60405180910390f35b61008660048036038101906100819190610453565b6102db565b6040516100949291906104e4565b60405180910390f35b600080826000111580156100bf575060005460026100bb91906105e5565b8311155b6100fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f59061052d565b60405180910390fd5b600061010c600a600b6103b5565b9050600260005461011d91906105b4565b84148061014357506002600054600361013691906105e5565b61014091906105b4565b84145b156101555760019250600091506102d5565b600260005461016491906105b4565b841015610174576001925061020a565b600054841161019657600092508360005461018f919061063f565b9350610209565b600260005460036101a791906105e5565b6101b191906105b4565b8410156101d15760009250600054846101ca919061063f565b9350610208565b60005460026101e091906105e5565b841161020757600192508360005460026101fa91906105e5565b610204919061063f565b93505b5b5b5b6102158160066103b5565b6102d061022291906105e5565b915061022f8460026103b5565b61023a8260046103b5565b61016861024791906105e5565b61025191906105e5565b8261025c919061063f565b91506102698460046103b5565b6102748260026103b5565b601e61028091906105e5565b61028a91906105e5565b82610295919061055e565b91506102a28460066103b5565b826102ad919061063f565b91506102ba8160056103b5565b6102d06102c791906105e5565b826102d291906105b4565b91505b50915091565b600080826000111580156102fd575060005460026102f991906105e5565b8311155b61033c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103339061052d565b60405180910390fd5b6000600260005461034d91906105b4565b9050600260005461035e91906105b4565b84111561039057600054600261037491906105e5565b600260005461038391906105b4565b61038d919061055e565b90505b838161039c919061063f565b93506103a78461009d565b809350819450505050915091565b6000808210156103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f19061050d565b60405180910390fd5b600190506000821115610438576000600190505b82811161043657838261042191906105e5565b9150808061042e90610689565b91505061040e565b505b92915050565b60008135905061044d816107d3565b92915050565b60006020828403121561046957610468610730565b5b60006104778482850161043e565b91505092915050565b61048981610673565b82525050565b600061049c600d8361054d565b91506104a782610735565b602082019050919050565b60006104bf604c8361054d565b91506104ca8261075e565b606082019050919050565b6104de8161067f565b82525050565b60006040820190506104f96000830185610480565b61050660208301846104d5565b9392505050565b600060208201905081810360008301526105268161048f565b9050919050565b60006020820190508181036000830152610546816104b2565b9050919050565b600082825260208201905092915050565b60006105698261067f565b91506105748361067f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105a9576105a86106d2565b5b828201905092915050565b60006105bf8261067f565b91506105ca8361067f565b9250826105da576105d9610701565b5b828204905092915050565b60006105f08261067f565b91506105fb8361067f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610634576106336106d2565b5b828202905092915050565b600061064a8261067f565b91506106558361067f565b925082821015610668576106676106d2565b5b828203905092915050565b60008115159050919050565b6000819050919050565b60006106948261067f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156106c7576106c66106d2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f43686f6f7365205f703e3d302e00000000000000000000000000000000000000600082015250565b7f506c656173652063686f6f7365205f72616469616e74206265747765656e203060008201527f20616e6420322a70693d3632383331383533303731382e204e6f74653a20726160208201527f6469616e742a31305e31312e0000000000000000000000000000000000000000604082015250565b6107dc8161067f565b81146107e757600080fd5b5056fea26469706673582212208e01bbae362c6996f275cf610376914732e3aa7a5347a9baee98ab4998f420bc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA58B00BA EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xCB5CC109 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x453 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP3 SWAP2 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x453 JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP3 SWAP2 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0xBF JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x2 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST PUSH2 0xFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10C PUSH1 0xA PUSH1 0xB PUSH2 0x3B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST DUP5 EQ DUP1 PUSH2 0x143 JUMPI POP PUSH1 0x2 PUSH1 0x0 SLOAD PUSH1 0x3 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST DUP5 EQ JUMPDEST ISZERO PUSH2 0x155 JUMPI PUSH1 0x1 SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x174 JUMPI PUSH1 0x1 SWAP3 POP PUSH2 0x20A JUMP JUMPDEST PUSH1 0x0 SLOAD DUP5 GT PUSH2 0x196 JUMPI PUSH1 0x0 SWAP3 POP DUP4 PUSH1 0x0 SLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST SWAP4 POP PUSH2 0x209 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD PUSH1 0x3 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 SWAP3 POP PUSH1 0x0 SLOAD DUP5 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST SWAP4 POP PUSH2 0x208 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x2 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST DUP5 GT PUSH2 0x207 JUMPI PUSH1 0x1 SWAP3 POP DUP4 PUSH1 0x0 SLOAD PUSH1 0x2 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST SWAP4 POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH2 0x215 DUP2 PUSH1 0x6 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x22F DUP5 PUSH1 0x2 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x23A DUP3 PUSH1 0x4 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x168 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST DUP3 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST SWAP2 POP PUSH2 0x269 DUP5 PUSH1 0x4 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x274 DUP3 PUSH1 0x2 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x1E PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST DUP3 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x55E JUMP JUMPDEST SWAP2 POP PUSH2 0x2A2 DUP5 PUSH1 0x6 PUSH2 0x3B5 JUMP JUMPDEST DUP3 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA DUP2 PUSH1 0x5 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST DUP3 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0x2FD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x2 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x333 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 SLOAD PUSH1 0x2 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x55E JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 DUP2 PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST SWAP4 POP PUSH2 0x3A7 DUP5 PUSH2 0x9D JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 LT ISZERO PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F1 SWAP1 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x436 JUMPI DUP4 DUP3 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x42E SWAP1 PUSH2 0x689 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x40E JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x44D DUP2 PUSH2 0x7D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x469 JUMPI PUSH2 0x468 PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x477 DUP5 DUP3 DUP6 ADD PUSH2 0x43E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x489 DUP2 PUSH2 0x673 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49C PUSH1 0xD DUP4 PUSH2 0x54D JUMP JUMPDEST SWAP2 POP PUSH2 0x4A7 DUP3 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BF PUSH1 0x4C DUP4 PUSH2 0x54D JUMP JUMPDEST SWAP2 POP PUSH2 0x4CA DUP3 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x67F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4F9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x506 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x526 DUP2 PUSH2 0x48F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x546 DUP2 PUSH2 0x4B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x569 DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0x574 DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x5A9 JUMPI PUSH2 0x5A8 PUSH2 0x6D2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BF DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0x5CA DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5DA JUMPI PUSH2 0x5D9 PUSH2 0x701 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F0 DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0x5FB DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x634 JUMPI PUSH2 0x633 PUSH2 0x6D2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x64A DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0x655 DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x668 JUMPI PUSH2 0x667 PUSH2 0x6D2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x694 DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x6C7 JUMPI PUSH2 0x6C6 PUSH2 0x6D2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x43686F6F7365205F703E3D302E00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x506C656173652063686F6F7365205F72616469616E74206265747765656E2030 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20616E6420322A70693D3632383331383533303731382E204E6F74653A207261 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6469616E742A31305E31312E0000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x7DC DUP2 PUSH2 0x67F JUMP JUMPDEST DUP2 EQ PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 ADD 0xBB 0xAE CALLDATASIZE 0x2C PUSH10 0x96F275CF610376914732 0xE3 0xAA PUSH27 0x5347A9BAEE98AB4998F420BC64736F6C6343000807003300000000 ",
							"sourceMap": "61:1869:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;320:1182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1509:417;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;320:1182;370:10;382:12;415:8;412:1;:11;;:31;;;;;441:2;;439:1;:4;;;;:::i;:::-;427:8;:16;;412:31;402:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;532:6;541:11;546:2;549;541:4;:11::i;:::-;532:20;;826:1;823:2;;:4;;;;:::i;:::-;811:8;:16;:40;;;;850:1;846:2;;844:1;:4;;;;:::i;:::-;843:8;;;;:::i;:::-;831;:20;811:40;807:691;;;872:4;862:14;;894:1;884:11;;807:691;;;935:1;932:2;;:4;;;;:::i;:::-;921:8;:15;916:374;;;957:4;949:12;;916:374;;;1016:2;;1004:8;:14;1000:290;;1040:5;1032:13;;1071:8;1068:2;;:11;;;;:::i;:::-;1057:22;;1000:290;;;1118:1;1114:2;;1112:1;:4;;;;:::i;:::-;1111:8;;;;:::i;:::-;1100;:19;1096:194;;;1141:5;1133:13;;1178:2;;1169:8;:11;;;;:::i;:::-;1158:22;;1096:194;;;1215:2;;1213:1;:4;;;;:::i;:::-;1201:8;:16;1197:93;;1239:4;1231:12;;1271:8;1268:2;;1266:1;:4;;;;:::i;:::-;:13;;;;:::i;:::-;1255:24;;1197:93;1096:194;1000:290;916:374;1312:9;1317:1;1319;1312:4;:9::i;:::-;1308:3;:13;;;;:::i;:::-;1297:24;;1355:16;1360:8;1369:1;1355:4;:16::i;:::-;1345:9;1350:1;1352;1345:4;:9::i;:::-;1341:3;:13;;;;:::i;:::-;:30;;;;:::i;:::-;1329:43;;;;;:::i;:::-;;;1405:16;1410:8;1419:1;1405:4;:16::i;:::-;1395:9;1400:1;1402;1395:4;:9::i;:::-;1392:2;:12;;;;:::i;:::-;:29;;;;:::i;:::-;1380:42;;;;;:::i;:::-;;;1441:16;1446:8;1455:1;1441:4;:16::i;:::-;1430:27;;;;;:::i;:::-;;;1481:9;1486:1;1488;1481:4;:9::i;:::-;1477:3;:13;;;;:::i;:::-;1465:26;;;;;:::i;:::-;;;807:691;396:1106;320:1182;;;:::o;1509:417::-;1558:10;1570:12;1607:8;1604:1;:11;;:31;;;;;1633:2;;1631:1;:4;;;;:::i;:::-;1619:8;:16;;1604:31;1594:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;1768:6;1780:1;1777:2;;:4;;;;:::i;:::-;1768:13;;1807:1;1804:2;;:4;;;;:::i;:::-;1795:8;:13;1791:55;;;1833:2;;1831:1;:4;;;;:::i;:::-;1829:1;1826:2;;:4;;;;:::i;:::-;:9;;;;:::i;:::-;1822:13;;1791:55;1868:8;1866:1;:10;;;;:::i;:::-;1855:21;;1906:13;1910:8;1906:3;:13::i;:::-;1886:33;;;;;;;;1584:342;1509:417;;;:::o;109:207::-;164:7;191:1;187:2;:5;;179:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;221:1;216:6;;235:1;232:2;:4;228:84;;;251:6;258:1;251:8;;246:58;264:2;261:1;:5;246:58;;291:2;285:8;;;;;:::i;:::-;;;268:3;;;;;:::i;:::-;;;;246:58;;;;228:84;109:207;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:109::-;568:21;583:5;568:21;:::i;:::-;563:3;556:34;487:109;;:::o;602:366::-;744:3;765:67;829:2;824:3;765:67;:::i;:::-;758:74;;841:93;930:3;841:93;:::i;:::-;959:2;954:3;950:12;943:19;;602:366;;;:::o;974:::-;1116:3;1137:67;1201:2;1196:3;1137:67;:::i;:::-;1130:74;;1213:93;1302:3;1213:93;:::i;:::-;1331:2;1326:3;1322:12;1315:19;;974:366;;;:::o;1346:118::-;1433:24;1451:5;1433:24;:::i;:::-;1428:3;1421:37;1346:118;;:::o;1470:320::-;1585:4;1623:2;1612:9;1608:18;1600:26;;1636:65;1698:1;1687:9;1683:17;1674:6;1636:65;:::i;:::-;1711:72;1779:2;1768:9;1764:18;1755:6;1711:72;:::i;:::-;1470:320;;;;;:::o;1796:419::-;1962:4;2000:2;1989:9;1985:18;1977:26;;2049:9;2043:4;2039:20;2035:1;2024:9;2020:17;2013:47;2077:131;2203:4;2077:131;:::i;:::-;2069:139;;1796:419;;;:::o;2221:::-;2387:4;2425:2;2414:9;2410:18;2402:26;;2474:9;2468:4;2464:20;2460:1;2449:9;2445:17;2438:47;2502:131;2628:4;2502:131;:::i;:::-;2494:139;;2221:419;;;:::o;2727:169::-;2811:11;2845:6;2840:3;2833:19;2885:4;2880:3;2876:14;2861:29;;2727:169;;;;:::o;2902:305::-;2942:3;2961:20;2979:1;2961:20;:::i;:::-;2956:25;;2995:20;3013:1;2995:20;:::i;:::-;2990:25;;3149:1;3081:66;3077:74;3074:1;3071:81;3068:107;;;3155:18;;:::i;:::-;3068:107;3199:1;3196;3192:9;3185:16;;2902:305;;;;:::o;3213:185::-;3253:1;3270:20;3288:1;3270:20;:::i;:::-;3265:25;;3304:20;3322:1;3304:20;:::i;:::-;3299:25;;3343:1;3333:35;;3348:18;;:::i;:::-;3333:35;3390:1;3387;3383:9;3378:14;;3213:185;;;;:::o;3404:348::-;3444:7;3467:20;3485:1;3467:20;:::i;:::-;3462:25;;3501:20;3519:1;3501:20;:::i;:::-;3496:25;;3689:1;3621:66;3617:74;3614:1;3611:81;3606:1;3599:9;3592:17;3588:105;3585:131;;;3696:18;;:::i;:::-;3585:131;3744:1;3741;3737:9;3726:20;;3404:348;;;;:::o;3758:191::-;3798:4;3818:20;3836:1;3818:20;:::i;:::-;3813:25;;3852:20;3870:1;3852:20;:::i;:::-;3847:25;;3891:1;3888;3885:8;3882:34;;;3896:18;;:::i;:::-;3882:34;3941:1;3938;3934:9;3926:17;;3758:191;;;;:::o;3955:90::-;3989:7;4032:5;4025:13;4018:21;4007:32;;3955:90;;;:::o;4051:77::-;4088:7;4117:5;4106:16;;4051:77;;;:::o;4134:233::-;4173:3;4196:24;4214:5;4196:24;:::i;:::-;4187:33;;4242:66;4235:5;4232:77;4229:103;;;4312:18;;:::i;:::-;4229:103;4359:1;4352:5;4348:13;4341:20;;4134:233;;;:::o;4373:180::-;4421:77;4418:1;4411:88;4518:4;4515:1;4508:15;4542:4;4539:1;4532:15;4559:180;4607:77;4604:1;4597:88;4704:4;4701:1;4694:15;4728:4;4725:1;4718:15;4868:117;4977:1;4974;4967:12;4991:163;5131:15;5127:1;5119:6;5115:14;5108:39;4991:163;:::o;5160:300::-;5300:34;5296:1;5288:6;5284:14;5277:58;5369:34;5364:2;5356:6;5352:15;5345:59;5438:14;5433:2;5425:6;5421:15;5414:39;5160:300;:::o;5466:122::-;5539:24;5557:5;5539:24;:::i;:::-;5532:5;5529:35;5519:63;;5578:1;5575;5568:12;5519:63;5466:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "416000",
								"executionCost": "22555",
								"totalCost": "438555"
							},
							"external": {
								"cos(uint256)": "infinite",
								"sin(uint256)": "infinite"
							},
							"internal": {
								"_pow(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 1930,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 92,
									"end": 104,
									"name": "PUSH",
									"source": 0,
									"value": "492559F64F"
								},
								{
									"begin": 82,
									"end": 104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 104,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 1930,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208e01bbae362c6996f275cf610376914732e3aa7a5347a9baee98ab4998f420bc64736f6c63430008070033",
									".code": [
										{
											"begin": 61,
											"end": 1930,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "PUSH",
											"source": 0,
											"value": "A58B00BA"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "PUSH",
											"source": 0,
											"value": "CB5CC109"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1930,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 415,
											"end": 423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 412,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 423,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 412,
											"end": 423,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 412,
											"end": 443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 412,
											"end": 443,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 412,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 412,
											"end": 443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 412,
											"end": 443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 441,
											"end": 443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 443,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 439,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 439,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 439,
											"end": 443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 439,
											"end": 443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 439,
											"end": 443,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 443,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 439,
											"end": 443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 435,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 427,
											"end": 443,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 427,
											"end": 443,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 412,
											"end": 443,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 412,
											"end": 443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 402,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 402,
											"end": 526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 402,
											"end": 526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 402,
											"end": 526,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 402,
											"end": 526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 402,
											"end": 526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 402,
											"end": 526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 402,
											"end": 526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 402,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 402,
											"end": 526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 402,
											"end": 526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 526,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 402,
											"end": 526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 402,
											"end": 526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 402,
											"end": 526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 402,
											"end": 526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 402,
											"end": 526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 526,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 402,
											"end": 526,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 402,
											"end": 526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 532,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 549,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 541,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 541,
											"end": 552,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 541,
											"end": 552,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 541,
											"end": 552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 532,
											"end": 552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 826,
											"end": 827,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 823,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 823,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 823,
											"end": 827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 823,
											"end": 827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 823,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 823,
											"end": 827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 823,
											"end": 827,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 823,
											"end": 827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 811,
											"end": 819,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 811,
											"end": 827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 811,
											"end": 851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 811,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 811,
											"end": 851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 811,
											"end": 851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 850,
											"end": 851,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 846,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 848,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 844,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 844,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 844,
											"end": 848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 844,
											"end": 848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 844,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 844,
											"end": 848,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 844,
											"end": 848,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 844,
											"end": 848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 843,
											"end": 851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 843,
											"end": 851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 843,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 843,
											"end": 851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 843,
											"end": 851,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 843,
											"end": 851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 831,
											"end": 839,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 831,
											"end": 851,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 811,
											"end": 851,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 811,
											"end": 851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 807,
											"end": 1498,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 807,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 807,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 872,
											"end": 876,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 862,
											"end": 876,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 862,
											"end": 876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 884,
											"end": 895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 807,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 807,
											"end": 1498,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 807,
											"end": 1498,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 807,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 935,
											"end": 936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 932,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 932,
											"end": 936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 932,
											"end": 936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 932,
											"end": 936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 936,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 932,
											"end": 936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 921,
											"end": 929,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 921,
											"end": 936,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 916,
											"end": 1290,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 916,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 916,
											"end": 1290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 957,
											"end": 961,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 949,
											"end": 961,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 916,
											"end": 1290,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 1290,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 916,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1012,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1018,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1000,
											"end": 1290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1045,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1071,
											"end": 1079,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1000,
											"end": 1290,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1290,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1000,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1114,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1111,
											"end": 1119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1111,
											"end": 1119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1111,
											"end": 1119,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1111,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1108,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1119,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1290,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1096,
											"end": 1290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1146,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1177,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1169,
											"end": 1180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1169,
											"end": 1180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1169,
											"end": 1180,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1169,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1180,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1096,
											"end": 1290,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1290,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1096,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1209,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1217,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1197,
											"end": 1290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1243,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1231,
											"end": 1243,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1267,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1266,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1266,
											"end": 1270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1266,
											"end": 1270,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1266,
											"end": 1270,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1266,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1290,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1197,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1290,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1096,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1290,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1000,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 916,
											"end": 1290,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 916,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1317,
											"end": 1318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1312,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1312,
											"end": 1321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1312,
											"end": 1321,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1312,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1311,
											"name": "PUSH",
											"source": 0,
											"value": "2D0"
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1360,
											"end": 1368,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1355,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1355,
											"end": 1371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1355,
											"end": 1371,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1355,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1345,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1341,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1341,
											"end": 1354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1341,
											"end": 1354,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1354,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1341,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1341,
											"end": 1371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1341,
											"end": 1371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1371,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1341,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1372,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1329,
											"end": 1372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1329,
											"end": 1372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1329,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1329,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1410,
											"end": 1418,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1405,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1405,
											"end": 1421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1421,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1405,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1400,
											"end": 1401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1403,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1395,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1395,
											"end": 1404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1404,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1395,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1394,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 1392,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1392,
											"end": 1404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1392,
											"end": 1404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1392,
											"end": 1404,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1392,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1392,
											"end": 1421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1392,
											"end": 1421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1392,
											"end": 1421,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1392,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1380,
											"end": 1422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1380,
											"end": 1422,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1380,
											"end": 1422,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1380,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1446,
											"end": 1454,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1456,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1441,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1441,
											"end": 1457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1457,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1441,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1486,
											"end": 1487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1481,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1480,
											"name": "PUSH",
											"source": 0,
											"value": "2D0"
										},
										{
											"begin": 1477,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1477,
											"end": 1490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1477,
											"end": 1490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1477,
											"end": 1490,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1477,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1465,
											"end": 1491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1465,
											"end": 1491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1465,
											"end": 1491,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1465,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 807,
											"end": 1498,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 807,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 396,
											"end": 1502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 320,
											"end": 1502,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1615,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1604,
											"end": 1635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1631,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1631,
											"end": 1635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1631,
											"end": 1635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1631,
											"end": 1635,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1631,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1635,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1604,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1594,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1781,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1777,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1804,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1806,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1804,
											"end": 1808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1804,
											"end": 1808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1804,
											"end": 1808,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1804,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1803,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1808,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1791,
											"end": 1846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1831,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1831,
											"end": 1835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1831,
											"end": 1835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1835,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1831,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1822,
											"end": 1835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1822,
											"end": 1835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1846,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1791,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1876,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1906,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1910,
											"end": 1918,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1906,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1906,
											"end": 1919,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1906,
											"end": 1919,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1906,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1919,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1919,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1926,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 109,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 109,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 164,
											"end": 171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 192,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 192,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 179,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 179,
											"end": 210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 179,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 179,
											"end": 210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 179,
											"end": 210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 179,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 179,
											"end": 210,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 179,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 179,
											"end": 210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 179,
											"end": 210,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 179,
											"end": 210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 210,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 179,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 221,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 235,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 232,
											"end": 236,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 228,
											"end": 312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 228,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 228,
											"end": 312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 304,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 246,
											"end": 304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 264,
											"end": 266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 261,
											"end": 262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 261,
											"end": 266,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 246,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 246,
											"end": 304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 291,
											"end": 293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 285,
											"end": 293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 285,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 285,
											"end": 293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 285,
											"end": 293,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 285,
											"end": 293,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 285,
											"end": 293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 285,
											"end": 293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 268,
											"end": 271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 268,
											"end": 271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 268,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 268,
											"end": 271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 268,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 268,
											"end": 271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 268,
											"end": 271,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 268,
											"end": 271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 268,
											"end": 271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 268,
											"end": 271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 268,
											"end": 271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 246,
											"end": 304,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 304,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 246,
											"end": 304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 246,
											"end": 304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 312,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 228,
											"end": 312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 109,
											"end": 316,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 109,
											"end": 316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 109,
											"end": 316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 109,
											"end": 316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 109,
											"end": 316,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 563,
											"end": 566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 556,
											"end": 590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 602,
											"end": 968,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 602,
											"end": 968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 744,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 829,
											"end": 831,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 824,
											"end": 827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 765,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 765,
											"end": 832,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 832,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 765,
											"end": 832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 832,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 930,
											"end": 933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 841,
											"end": 934,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 841,
											"end": 934,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 841,
											"end": 934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 954,
											"end": 957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 950,
											"end": 962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 943,
											"end": 962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 943,
											"end": 962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 602,
											"end": 968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 602,
											"end": 968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 968,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 974,
											"end": 1340,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 974,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1201,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "4C"
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1137,
											"end": 1204,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1204,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1137,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1302,
											"end": 1305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1213,
											"end": 1306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1213,
											"end": 1306,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1213,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1326,
											"end": 1329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1340,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1346,
											"end": 1464,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1346,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1451,
											"end": 1456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1433,
											"end": 1457,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1457,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1433,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1464,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1470,
											"end": 1790,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1470,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 1589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1625,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1621,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1698,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1696,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1636,
											"end": 1701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 1701,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1636,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1779,
											"end": 1781,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1777,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1711,
											"end": 1783,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1711,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1711,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1790,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1790,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1790,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1796,
											"end": 2215,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1796,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2002,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 1998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2203,
											"end": 2207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2077,
											"end": 2208,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2208,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2077,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 2215,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 2215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 2215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 2215,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2221,
											"end": 2640,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2221,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2484,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2458,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2502,
											"end": 2633,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2502,
											"end": 2633,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2502,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2640,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2640,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2727,
											"end": 2896,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2727,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2845,
											"end": 2851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2896,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2902,
											"end": 3207,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2902,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2942,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2979,
											"end": 2980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2961,
											"end": 2981,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2961,
											"end": 2981,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2961,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 2981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 2981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3013,
											"end": 3014,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2995,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2995,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2995,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3015,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3081,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3077,
											"end": 3151,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3152,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3068,
											"end": 3175,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3155,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3155,
											"end": 3173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3155,
											"end": 3173,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3155,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3175,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3068,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3192,
											"end": 3201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 3207,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 3207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 3207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 3207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 3207,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3213,
											"end": 3398,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3213,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3253,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3288,
											"end": 3289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3270,
											"end": 3290,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3270,
											"end": 3290,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3270,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3304,
											"end": 3324,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3304,
											"end": 3324,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3304,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3324,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3333,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3333,
											"end": 3368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3348,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3348,
											"end": 3366,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3348,
											"end": 3366,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3348,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3333,
											"end": 3368,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3333,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3398,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3398,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3404,
											"end": 3752,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3404,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3485,
											"end": 3486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3519,
											"end": 3520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3501,
											"end": 3521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3501,
											"end": 3521,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3501,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3521,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3687,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3617,
											"end": 3691,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3615,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 3692,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3607,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3609,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3716,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3585,
											"end": 3716,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3696,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3696,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3696,
											"end": 3714,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3696,
											"end": 3714,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3696,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3716,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3585,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3744,
											"end": 3745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3741,
											"end": 3742,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3746,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3752,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3758,
											"end": 3949,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3758,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3836,
											"end": 3837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3813,
											"end": 3838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3813,
											"end": 3838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3852,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3870,
											"end": 3871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3852,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3852,
											"end": 3872,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3852,
											"end": 3872,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3852,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3872,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3885,
											"end": 3893,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3916,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3882,
											"end": 3916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3896,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3896,
											"end": 3914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3896,
											"end": 3914,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3896,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3882,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3943,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3949,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3955,
											"end": 4045,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3955,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 3996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4038,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4039,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4045,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4051,
											"end": 4128,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4051,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4117,
											"end": 4122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4128,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4134,
											"end": 4367,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4134,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4214,
											"end": 4219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4196,
											"end": 4220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4196,
											"end": 4220,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4196,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4242,
											"end": 4308,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4235,
											"end": 4240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4332,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4229,
											"end": 4332,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4332,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4229,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4352,
											"end": 4357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4367,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4373,
											"end": 4553,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4373,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4498,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4418,
											"end": 4419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4518,
											"end": 4522,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4515,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4508,
											"end": 4523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4542,
											"end": 4546,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4539,
											"end": 4540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4547,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4739,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4559,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4684,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4604,
											"end": 4605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4708,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4701,
											"end": 4702,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4732,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4725,
											"end": 4726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4718,
											"end": 4733,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4985,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4868,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 4978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4974,
											"end": 4975,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4979,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4991,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5146,
											"name": "PUSH",
											"source": 1,
											"value": "43686F6F7365205F703E3D302E00000000000000000000000000000000000000"
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5119,
											"end": 5125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5115,
											"end": 5129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5147,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5154,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5160,
											"end": 5460,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5160,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "PUSH",
											"source": 1,
											"value": "506C656173652063686F6F7365205F72616469616E74206265747765656E2030"
										},
										{
											"begin": 5296,
											"end": 5297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5403,
											"name": "PUSH",
											"source": 1,
											"value": "20616E6420322A70693D3632383331383533303731382E204E6F74653A207261"
										},
										{
											"begin": 5364,
											"end": 5366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5356,
											"end": 5362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5452,
											"name": "PUSH",
											"source": 1,
											"value": "6469616E742A31305E31312E0000000000000000000000000000000000000000"
										},
										{
											"begin": 5433,
											"end": 5435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5460,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5466,
											"end": 5588,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5466,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5557,
											"end": 5562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5539,
											"end": 5563,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5539,
											"end": 5563,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5539,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5532,
											"end": 5537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5564,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5519,
											"end": 5582,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5568,
											"end": 5580,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5582,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5519,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5588,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"cos(uint256)": "a58b00ba",
							"sin(uint256)": "cb5cc109"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_radiant\",\"type\":\"uint256\"}],\"name\":\"cos\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_sign\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_output\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_radiant\",\"type\":\"uint256\"}],\"name\":\"sin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_sign\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_output\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"plants/nft/contracts/CosSin.sol\":\"CosSin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"plants/nft/contracts/CosSin.sol\":{\"keccak256\":\"0xcb22c1255fafba8003f08a8cc5ac47a89a6d956d6ddab5c59ca00d9394e30c64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aec3b02febf5c4759955d9759e1f487170ce074e46a45f9ad0fc747e06f77bd\",\"dweb:/ipfs/QmXv9zbutAubZsYXA3ddH3i33BK76cWfQ96tBTT4Gfx26S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "plants/nft/contracts/CosSin.sol:CosSin",
								"label": "pi",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"plants/nft/contracts/CosSin.sol": {
				"ast": {
					"absolutePath": "plants/nft/contracts/CosSin.sol",
					"exportedSymbols": {
						"CosSin": [
							285
						]
					},
					"id": 286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 285,
							"linearizedBaseContracts": [
								285
							],
							"name": "CosSin",
							"nameLocation": "70:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "pi",
									"nameLocation": "87:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 285,
									"src": "82:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "82:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333134313539323635333539",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "92:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_314159265359_by_1",
											"typeString": "int_const 314159265359"
										},
										"value": "314159265359"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "173:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 14,
																"name": "_p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "187:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "191:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "187:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43686f6f7365205f703e3d302e",
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "194:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3",
																"typeString": "literal_string \"Choose _p>=0.\""
															},
															"value": "Choose _p>=0."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_285e5b796fa074f38e2ac0a81a7a4090754c07798fac8f00d68ac2831c7c74f3",
																"typeString": "literal_string \"Choose _p>=0.\""
															}
														],
														"id": 13,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "179:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "179:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "179:31:0"
											},
											{
												"expression": {
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "216:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "221:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "216:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "216:6:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 24,
														"name": "_p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "232:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "235:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "228:84:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "238:74:0",
													"statements": [
														{
															"body": {
																"id": 41,
																"nodeType": "Block",
																"src": "273:31:0",
																"statements": [
																	{
																		"expression": {
																			"id": 39,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 37,
																				"name": "_y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "285:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "*=",
																			"rightHandSide": {
																				"id": 38,
																				"name": "_x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "291:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "285:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 40,
																		"nodeType": "ExpressionStatement",
																		"src": "285:8:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 31,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "261:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 32,
																	"name": "_p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "264:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "261:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 42,
															"initializationExpression": {
																"assignments": [
																	28
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 28,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "256:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 42,
																		"src": "251:6:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 27,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "251:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 30,
																"initialValue": {
																	"hexValue": "31",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "258:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "251:8:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 35,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "268:3:0",
																	"subExpression": {
																		"id": 34,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "268:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 36,
																"nodeType": "ExpressionStatement",
																"src": "268:3:0"
															},
															"nodeType": "ForStatement",
															"src": "246:58:0"
														}
													]
												}
											}
										]
									},
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_pow",
									"nameLocation": "118:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_x",
												"nameLocation": "128:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "123:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "123:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_p",
												"nameLocation": "137:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "132:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "132:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "122:18:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_y",
												"nameLocation": "169:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "164:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "164:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:9:0"
									},
									"scope": 285,
									"src": "109:207:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "396:1106:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 56,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "412:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 57,
																			"name": "_radiant",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "415:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "412:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 59,
																			"name": "_radiant",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "427:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 62,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 60,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "439:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 61,
																				"name": "pi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4,
																				"src": "441:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "439:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "427:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "412:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 65,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "411:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c656173652063686f6f7365205f72616469616e74206265747765656e203020616e6420322a70693d3632383331383533303731382e204e6f74653a2072616469616e742a31305e31312e",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "447:78:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92",
																"typeString": "literal_string \"Please choose _radiant between 0 and 2*pi=628318530718. Note: radiant*10^11.\""
															},
															"value": "Please choose _radiant between 0 and 2*pi=628318530718. Note: radiant*10^11."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92",
																"typeString": "literal_string \"Please choose _radiant between 0 and 2*pi=628318530718. Note: radiant*10^11.\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "402:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "402:124:0"
											},
											{
												"assignments": [
													70
												],
												"declarations": [
													{
														"constant": false,
														"id": 70,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "537:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "532:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 69,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "532:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 75,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "546:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														{
															"hexValue": "3131",
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "549:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11_by_1",
																"typeString": "int_const 11"
															},
															"value": "11"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															{
																"typeIdentifier": "t_rational_11_by_1",
																"typeString": "int_const 11"
															}
														],
														"id": 71,
														"name": "_pow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "541:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "541:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "532:20:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 76,
															"name": "_radiant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "811:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "pi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "823:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "32",
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "826:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "823:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "811:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 81,
															"name": "_radiant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "831:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 84,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 82,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "844:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 83,
																			"name": "pi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4,
																			"src": "846:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "844:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 85,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "843:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "32",
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "850:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "843:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "831:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "811:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 220,
													"nodeType": "Block",
													"src": "908:590:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 99,
																	"name": "_radiant",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "921:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 100,
																		"name": "pi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4,
																		"src": "932:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "935:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "932:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "921:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 109,
																		"name": "_radiant",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "1004:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 110,
																		"name": "pi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4,
																		"src": "1016:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1004:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 123,
																			"name": "_radiant",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "1100:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 126,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "33",
																							"id": 124,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1112:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3_by_1",
																								"typeString": "int_const 3"
																							},
																							"value": "3"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 125,
																							"name": "pi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4,
																							"src": "1114:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1112:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 127,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1111:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1118:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "1111:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1100:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 142,
																				"name": "_radiant",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 48,
																				"src": "1201:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "32",
																					"id": 143,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1213:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 144,
																					"name": "pi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4,
																					"src": "1215:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1213:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1201:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 160,
																		"nodeType": "IfStatement",
																		"src": "1197:93:0",
																		"trueBody": {
																			"id": 159,
																			"nodeType": "Block",
																			"src": "1219:71:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 149,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 147,
																							"name": "_sign",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 51,
																							"src": "1231:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 148,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1239:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "1231:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 150,
																					"nodeType": "ExpressionStatement",
																					"src": "1231:12:0"
																				},
																				{
																					"expression": {
																						"id": 157,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 151,
																							"name": "_radiant",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 48,
																							"src": "1255:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 156,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 154,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "32",
																									"id": 152,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1266:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_2_by_1",
																										"typeString": "int_const 2"
																									},
																									"value": "2"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"id": 153,
																									"name": "pi",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4,
																									"src": "1268:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "1266:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 155,
																								"name": "_radiant",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 48,
																								"src": "1271:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1266:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1255:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 158,
																					"nodeType": "ExpressionStatement",
																					"src": "1255:24:0"
																				}
																			]
																		}
																	},
																	"id": 161,
																	"nodeType": "IfStatement",
																	"src": "1096:194:0",
																	"trueBody": {
																		"id": 141,
																		"nodeType": "Block",
																		"src": "1121:70:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 133,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 131,
																						"name": "_sign",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 51,
																						"src": "1133:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "66616c7365",
																						"id": 132,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1141:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "false"
																					},
																					"src": "1133:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 134,
																				"nodeType": "ExpressionStatement",
																				"src": "1133:13:0"
																			},
																			{
																				"expression": {
																					"id": 139,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 135,
																						"name": "_radiant",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 48,
																						"src": "1158:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 138,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 136,
																							"name": "_radiant",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 48,
																							"src": "1169:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 137,
																							"name": "pi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4,
																							"src": "1178:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1169:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1158:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 140,
																				"nodeType": "ExpressionStatement",
																				"src": "1158:22:0"
																			}
																		]
																	}
																},
																"id": 162,
																"nodeType": "IfStatement",
																"src": "1000:290:0",
																"trueBody": {
																	"id": 122,
																	"nodeType": "Block",
																	"src": "1020:70:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 112,
																					"name": "_sign",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 51,
																					"src": "1032:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "66616c7365",
																					"id": 113,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1040:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "false"
																				},
																				"src": "1032:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 115,
																			"nodeType": "ExpressionStatement",
																			"src": "1032:13:0"
																		},
																		{
																			"expression": {
																				"id": 120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 116,
																					"name": "_radiant",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 48,
																					"src": "1057:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 119,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 117,
																						"name": "pi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4,
																						"src": "1068:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 118,
																						"name": "_radiant",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 48,
																						"src": "1071:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1068:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1057:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 121,
																			"nodeType": "ExpressionStatement",
																			"src": "1057:22:0"
																		}
																	]
																}
															},
															"id": 163,
															"nodeType": "IfStatement",
															"src": "916:374:0",
															"trueBody": {
																"id": 108,
																"nodeType": "Block",
																"src": "939:55:0",
																"statements": [
																	{
																		"expression": {
																			"id": 106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 104,
																				"name": "_sign",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 51,
																				"src": "949:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "957:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "949:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 107,
																		"nodeType": "ExpressionStatement",
																		"src": "949:12:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 164,
																	"name": "_output",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "1297:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "373230",
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1308:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_720_by_1",
																			"typeString": "int_const 720"
																		},
																		"value": "720"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 167,
																				"name": "n",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 70,
																				"src": "1317:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "36",
																				"id": 168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1319:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_6_by_1",
																					"typeString": "int_const 6"
																				},
																				"value": "6"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_6_by_1",
																					"typeString": "int_const 6"
																				}
																			],
																			"id": 166,
																			"name": "_pow",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "1312:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1312:9:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1308:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1297:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 172,
															"nodeType": "ExpressionStatement",
															"src": "1297:24:0"
														},
														{
															"expression": {
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 173,
																	"name": "_output",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "1329:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "333630",
																					"id": 174,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1341:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_360_by_1",
																						"typeString": "int_const 360"
																					},
																					"value": "360"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"arguments": [
																						{
																							"id": 176,
																							"name": "n",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "1350:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"hexValue": "34",
																							"id": 177,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1352:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"value": "4"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							}
																						],
																						"id": 175,
																						"name": "_pow",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 46,
																						"src": "1345:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 178,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1345:9:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1341:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 181,
																						"name": "_radiant",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 48,
																						"src": "1360:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "32",
																						"id": 182,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1369:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						}
																					],
																					"id": 180,
																					"name": "_pow",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 46,
																					"src": "1355:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1355:16:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1341:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1340:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1329:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 187,
															"nodeType": "ExpressionStatement",
															"src": "1329:43:0"
														},
														{
															"expression": {
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 188,
																	"name": "_output",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "1380:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3330",
																					"id": 189,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1392:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_30_by_1",
																						"typeString": "int_const 30"
																					},
																					"value": "30"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"arguments": [
																						{
																							"id": 191,
																							"name": "n",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "1400:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"hexValue": "32",
																							"id": 192,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1402:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							}
																						],
																						"id": 190,
																						"name": "_pow",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 46,
																						"src": "1395:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 193,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1395:9:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1392:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 196,
																						"name": "_radiant",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 48,
																						"src": "1410:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "34",
																						"id": 197,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1419:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4_by_1",
																							"typeString": "int_const 4"
																						},
																						"value": "4"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_4_by_1",
																							"typeString": "int_const 4"
																						}
																					],
																					"id": 195,
																					"name": "_pow",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 46,
																					"src": "1405:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1405:16:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1392:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 200,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1391:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1380:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 202,
															"nodeType": "ExpressionStatement",
															"src": "1380:42:0"
														},
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 203,
																	"name": "_output",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "1430:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 205,
																			"name": "_radiant",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "1446:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "36",
																			"id": 206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1455:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6_by_1",
																				"typeString": "int_const 6"
																			},
																			"value": "6"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_6_by_1",
																				"typeString": "int_const 6"
																			}
																		],
																		"id": 204,
																		"name": "_pow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "1441:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1441:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1430:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "1430:27:0"
														},
														{
															"expression": {
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 210,
																	"name": "_output",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "1465:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "373230",
																				"id": 211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1477:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_720_by_1",
																					"typeString": "int_const 720"
																				},
																				"value": "720"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 213,
																						"name": "n",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 70,
																						"src": "1486:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "35",
																						"id": 214,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1488:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_5_by_1",
																							"typeString": "int_const 5"
																						},
																						"value": "5"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_5_by_1",
																							"typeString": "int_const 5"
																						}
																					],
																					"id": 212,
																					"name": "_pow",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 46,
																					"src": "1481:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1481:9:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1477:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 217,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1476:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1465:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 219,
															"nodeType": "ExpressionStatement",
															"src": "1465:26:0"
														}
													]
												},
												"id": 221,
												"nodeType": "IfStatement",
												"src": "807:691:0",
												"trueBody": {
													"id": 98,
													"nodeType": "Block",
													"src": "854:48:0",
													"statements": [
														{
															"expression": {
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 90,
																	"name": "_sign",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "862:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "872:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "862:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 93,
															"nodeType": "ExpressionStatement",
															"src": "862:14:0"
														},
														{
															"expression": {
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 94,
																	"name": "_output",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "884:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 95,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "894:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "884:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 97,
															"nodeType": "ExpressionStatement",
															"src": "884:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "a58b00ba",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cos",
									"nameLocation": "329:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "_radiant",
												"nameLocation": "338:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "333:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:15:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "_sign",
												"nameLocation": "375:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "370:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 50,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "370:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "_output",
												"nameLocation": "387:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "382:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "382:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:26:0"
									},
									"scope": 285,
									"src": "320:1182:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1584:342:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1604:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 234,
																			"name": "_radiant",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "1607:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1604:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 236,
																			"name": "_radiant",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "1619:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1631:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 238,
																				"name": "pi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4,
																				"src": "1633:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1631:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1619:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1604:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 242,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1603:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c656173652063686f6f7365205f72616469616e74206265747765656e203020616e6420322a70693d3632383331383533303731382e204e6f74653a2072616469616e742a31305e31312e",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1639:78:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92",
																"typeString": "literal_string \"Please choose _radiant between 0 and 2*pi=628318530718. Note: radiant*10^11.\""
															},
															"value": "Please choose _radiant between 0 and 2*pi=628318530718. Note: radiant*10^11."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9fdba35b8ed9c5cb5ad3688a0c64a128c52261c98e2e21875130f4f76e5af92",
																"typeString": "literal_string \"Please choose _radiant between 0 and 2*pi=628318530718. Note: radiant*10^11.\""
															}
														],
														"id": 232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1594:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1594:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "1594:124:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "1773:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 283,
														"src": "1768:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 246,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "pi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1777:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "32",
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1780:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1777:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1768:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 252,
														"name": "_radiant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "1795:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 253,
															"name": "pi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1804:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1807:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "1804:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1795:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 268,
												"nodeType": "IfStatement",
												"src": "1791:55:0",
												"trueBody": {
													"id": 267,
													"nodeType": "Block",
													"src": "1810:36:0",
													"statements": [
														{
															"expression": {
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 257,
																	"name": "m",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "1822:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 258,
																			"name": "pi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4,
																			"src": "1826:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1829:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "1826:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "32",
																			"id": 261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1831:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 262,
																			"name": "pi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4,
																			"src": "1833:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1831:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1826:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1822:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 266,
															"nodeType": "ExpressionStatement",
															"src": "1822:13:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 269,
														"name": "_radiant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "1855:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 270,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "1866:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 271,
															"name": "_radiant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "1868:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1866:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1855:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "1855:21:0"
											},
											{
												"expression": {
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 275,
																"name": "_sign",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "1887:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 276,
																"name": "_output",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "1895:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 277,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1886:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 279,
																"name": "_radiant",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "1910:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 278,
															"name": "cos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "1906:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256) view returns (bool,uint256)"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1906:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "1886:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "1886:33:0"
											}
										]
									},
									"functionSelector": "cb5cc109",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sin",
									"nameLocation": "1518:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "_radiant",
												"nameLocation": "1527:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1522:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1522:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1521:15:0"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "_sign",
												"nameLocation": "1563:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1558:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1558:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "_output",
												"nameLocation": "1575:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1570:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1570:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:26:0"
									},
									"scope": 285,
									"src": "1509:417:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 286,
							"src": "61:1869:0",
							"usedErrors": []
						}
					],
					"src": "33:1898:0"
				},
				"id": 0
			}
		}
	}
}